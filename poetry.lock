[[package]]
name = "aiodns"
version = "3.0.0"
description = "Simple DNS resolver for asyncio"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
pycares = ">=4.0.0"

[[package]]
name = "aiofiles"
version = "0.8.0"
description = "File support for asyncio."
category = "main"
optional = false
python-versions = ">=3.6,<4.0"

[[package]]
name = "aiohttp"
version = "3.8.1"
description = "Async http client/server framework (asyncio)"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
aiodns = {version = "*", optional = true, markers = "extra == \"speedups\""}
aiosignal = ">=1.1.2"
async-timeout = ">=4.0.0a3,<5.0"
attrs = ">=17.3.0"
Brotli = {version = "*", optional = true, markers = "extra == \"speedups\""}
cchardet = {version = "*", optional = true, markers = "extra == \"speedups\""}
charset-normalizer = ">=2.0,<3.0"
frozenlist = ">=1.1.1"
multidict = ">=4.5,<7.0"
yarl = ">=1.0,<2.0"

[package.extras]
speedups = ["cchardet", "brotli", "aiodns"]

[[package]]
name = "aiosignal"
version = "1.2.0"
description = "aiosignal: a list of registered asynchronous callbacks"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
frozenlist = ">=1.1.0"

[[package]]
name = "anyio"
version = "3.6.1"
description = "High level compatibility layer for multiple asynchronous event loop implementations"
category = "main"
optional = false
python-versions = ">=3.6.2"

[package.dependencies]
idna = ">=2.8"
sniffio = ">=1.1"

[package.extras]
trio = ["trio (>=0.16)"]
test = ["uvloop (>=0.15)", "mock (>=4)", "uvloop (<0.15)", "contextlib2", "trustme", "pytest-mock (>=3.6.1)", "pytest (>=7.0)", "hypothesis (>=4.0)", "coverage[toml] (>=4.5)"]
doc = ["sphinx-autodoc-typehints (>=1.2.0)", "sphinx-rtd-theme", "packaging"]

[[package]]
name = "asgiref"
version = "3.5.2"
description = "ASGI specs, helper code, and adapters"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
tests = ["mypy (>=0.800)", "pytest-asyncio", "pytest"]

[[package]]
name = "async-lru"
version = "1.0.3"
description = "Simple lru_cache for asyncio"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "async-timeout"
version = "4.0.2"
description = "Timeout context manager for asyncio programs"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "atomicwrites"
version = "1.4.0"
description = "Atomic file writes."
category = "dev"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[[package]]
name = "attrs"
version = "21.4.0"
description = "Classes Without Boilerplate"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[package.extras]
tests_no_zope = ["cloudpickle", "pytest-mypy-plugins", "mypy", "six", "pytest (>=4.3.0)", "pympler", "hypothesis", "coverage[toml] (>=5.0.2)"]
tests = ["cloudpickle", "zope.interface", "pytest-mypy-plugins", "mypy", "six", "pytest (>=4.3.0)", "pympler", "hypothesis", "coverage[toml] (>=5.0.2)"]
docs = ["sphinx-notfound-page", "zope.interface", "sphinx", "furo"]
dev = ["cloudpickle", "pre-commit", "sphinx-notfound-page", "sphinx", "furo", "zope.interface", "pytest-mypy-plugins", "mypy", "six", "pytest (>=4.3.0)", "pympler", "hypothesis", "coverage[toml] (>=5.0.2)"]

[[package]]
name = "bcrypt"
version = "3.2.2"
description = "Modern password hashing for your software and your servers"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
cffi = ">=1.1"

[package.extras]
tests = ["pytest (>=3.2.1,!=3.3.0)"]
typecheck = ["mypy"]

[[package]]
name = "beanie"
version = "1.11.7"
description = "Asynchronous Python ODM for MongoDB"
category = "main"
optional = false
python-versions = ">=3.7,<4.0"

[package.dependencies]
click = ">=7"
motor = ">=2.5,<4.0"
pydantic = ">=1.9.0"
toml = "*"
yarl = ">=1.6"

[[package]]
name = "beautifulsoup4"
version = "4.11.1"
description = "Screen-scraping library"
category = "main"
optional = false
python-versions = ">=3.6.0"

[package.dependencies]
soupsieve = ">1.2"

[package.extras]
lxml = ["lxml"]
html5lib = ["html5lib"]

[[package]]
name = "black"
version = "22.6.0"
description = "The uncompromising code formatter."
category = "dev"
optional = false
python-versions = ">=3.6.2"

[package.dependencies]
click = ">=8.0.0"
mypy-extensions = ">=0.4.3"
pathspec = ">=0.9.0"
platformdirs = ">=2"
tomli = {version = ">=1.1.0", markers = "python_full_version < \"3.11.0a7\""}

[package.extras]
uvloop = ["uvloop (>=0.15.2)"]
jupyter = ["tokenize-rt (>=3.2.0)", "ipython (>=7.8.0)"]
d = ["aiohttp (>=3.7.4)"]
colorama = ["colorama (>=0.4.3)"]

[[package]]
name = "blis"
version = "0.7.8"
description = "The Blis BLAS-like linear algebra library, as a self-contained C-extension."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
numpy = ">=1.15.0"

[[package]]
name = "boto3"
version = "1.24.18"
description = "The AWS SDK for Python"
category = "main"
optional = false
python-versions = ">= 3.7"

[package.dependencies]
botocore = ">=1.27.18,<1.28.0"
jmespath = ">=0.7.1,<2.0.0"
s3transfer = ">=0.6.0,<0.7.0"

[package.extras]
crt = ["botocore[crt] (>=1.21.0,<2.0a0)"]

[[package]]
name = "boto3-stubs"
version = "1.24.50"
description = "Type annotations for boto3 1.24.50 generated with mypy-boto3-builder 7.11.6"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
botocore-stubs = "*"
mypy-boto3-cloudformation = {version = ">=1.24.0,<1.25.0", optional = true, markers = "extra == \"essential\""}
mypy-boto3-dynamodb = {version = ">=1.24.0,<1.25.0", optional = true, markers = "extra == \"essential\""}
mypy-boto3-ec2 = {version = ">=1.24.0,<1.25.0", optional = true, markers = "extra == \"essential\""}
mypy-boto3-lambda = {version = ">=1.24.0,<1.25.0", optional = true, markers = "extra == \"essential\""}
mypy-boto3-rds = {version = ">=1.24.0,<1.25.0", optional = true, markers = "extra == \"essential\""}
mypy-boto3-s3 = {version = ">=1.24.0,<1.25.0", optional = true, markers = "extra == \"essential\""}
mypy-boto3-sqs = {version = ">=1.24.0,<1.25.0", optional = true, markers = "extra == \"essential\""}
types-s3transfer = "*"
typing-extensions = ">=4.1.0"

[package.extras]
lex-models = ["mypy-boto3-lex-models (>=1.24.0,<1.25.0)"]
lambda = ["mypy-boto3-lambda (>=1.24.0,<1.25.0)"]
lakeformation = ["mypy-boto3-lakeformation (>=1.24.0,<1.25.0)"]
kms = ["mypy-boto3-kms (>=1.24.0,<1.25.0)"]
kinesisvideo = ["mypy-boto3-kinesisvideo (>=1.24.0,<1.25.0)"]
kinesisanalyticsv2 = ["mypy-boto3-kinesisanalyticsv2 (>=1.24.0,<1.25.0)"]
kinesisanalytics = ["mypy-boto3-kinesisanalytics (>=1.24.0,<1.25.0)"]
kinesis-video-signaling = ["mypy-boto3-kinesis-video-signaling (>=1.24.0,<1.25.0)"]
kinesis-video-media = ["mypy-boto3-kinesis-video-media (>=1.24.0,<1.25.0)"]
kinesis-video-archived-media = ["mypy-boto3-kinesis-video-archived-media (>=1.24.0,<1.25.0)"]
kinesis = ["mypy-boto3-kinesis (>=1.24.0,<1.25.0)"]
keyspaces = ["mypy-boto3-keyspaces (>=1.24.0,<1.25.0)"]
kendra = ["mypy-boto3-kendra (>=1.24.0,<1.25.0)"]
kafkaconnect = ["mypy-boto3-kafkaconnect (>=1.24.0,<1.25.0)"]
kafka = ["mypy-boto3-kafka (>=1.24.0,<1.25.0)"]
ivschat = ["mypy-boto3-ivschat (>=1.24.0,<1.25.0)"]
ivs = ["mypy-boto3-ivs (>=1.24.0,<1.25.0)"]
iotwireless = ["mypy-boto3-iotwireless (>=1.24.0,<1.25.0)"]
iottwinmaker = ["mypy-boto3-iottwinmaker (>=1.24.0,<1.25.0)"]
iotthingsgraph = ["mypy-boto3-iotthingsgraph (>=1.24.0,<1.25.0)"]
iotsitewise = ["mypy-boto3-iotsitewise (>=1.24.0,<1.25.0)"]
iotsecuretunneling = ["mypy-boto3-iotsecuretunneling (>=1.24.0,<1.25.0)"]
iotfleethub = ["mypy-boto3-iotfleethub (>=1.24.0,<1.25.0)"]
iotevents-data = ["mypy-boto3-iotevents-data (>=1.24.0,<1.25.0)"]
iotevents = ["mypy-boto3-iotevents (>=1.24.0,<1.25.0)"]
iotdeviceadvisor = ["mypy-boto3-iotdeviceadvisor (>=1.24.0,<1.25.0)"]
iotanalytics = ["mypy-boto3-iotanalytics (>=1.24.0,<1.25.0)"]
iot1click-projects = ["mypy-boto3-iot1click-projects (>=1.24.0,<1.25.0)"]
iot1click-devices = ["mypy-boto3-iot1click-devices (>=1.24.0,<1.25.0)"]
iot-jobs-data = ["mypy-boto3-iot-jobs-data (>=1.24.0,<1.25.0)"]
iot-data = ["mypy-boto3-iot-data (>=1.24.0,<1.25.0)"]
iot = ["mypy-boto3-iot (>=1.24.0,<1.25.0)"]
inspector2 = ["mypy-boto3-inspector2 (>=1.24.0,<1.25.0)"]
inspector = ["mypy-boto3-inspector (>=1.24.0,<1.25.0)"]
importexport = ["mypy-boto3-importexport (>=1.24.0,<1.25.0)"]
imagebuilder = ["mypy-boto3-imagebuilder (>=1.24.0,<1.25.0)"]
identitystore = ["mypy-boto3-identitystore (>=1.24.0,<1.25.0)"]
iam = ["mypy-boto3-iam (>=1.24.0,<1.25.0)"]
honeycode = ["mypy-boto3-honeycode (>=1.24.0,<1.25.0)"]
healthlake = ["mypy-boto3-healthlake (>=1.24.0,<1.25.0)"]
health = ["mypy-boto3-health (>=1.24.0,<1.25.0)"]
guardduty = ["mypy-boto3-guardduty (>=1.24.0,<1.25.0)"]
groundstation = ["mypy-boto3-groundstation (>=1.24.0,<1.25.0)"]
greengrassv2 = ["mypy-boto3-greengrassv2 (>=1.24.0,<1.25.0)"]
greengrass = ["mypy-boto3-greengrass (>=1.24.0,<1.25.0)"]
grafana = ["mypy-boto3-grafana (>=1.24.0,<1.25.0)"]
glue = ["mypy-boto3-glue (>=1.24.0,<1.25.0)"]
globalaccelerator = ["mypy-boto3-globalaccelerator (>=1.24.0,<1.25.0)"]
glacier = ["mypy-boto3-glacier (>=1.24.0,<1.25.0)"]
gamesparks = ["mypy-boto3-gamesparks (>=1.24.0,<1.25.0)"]
gamelift = ["mypy-boto3-gamelift (>=1.24.0,<1.25.0)"]
fsx = ["mypy-boto3-fsx (>=1.24.0,<1.25.0)"]
frauddetector = ["mypy-boto3-frauddetector (>=1.24.0,<1.25.0)"]
forecastquery = ["mypy-boto3-forecastquery (>=1.24.0,<1.25.0)"]
forecast = ["mypy-boto3-forecast (>=1.24.0,<1.25.0)"]
fms = ["mypy-boto3-fms (>=1.24.0,<1.25.0)"]
fis = ["mypy-boto3-fis (>=1.24.0,<1.25.0)"]
firehose = ["mypy-boto3-firehose (>=1.24.0,<1.25.0)"]
finspace-data = ["mypy-boto3-finspace-data (>=1.24.0,<1.25.0)"]
finspace = ["mypy-boto3-finspace (>=1.24.0,<1.25.0)"]
evidently = ["mypy-boto3-evidently (>=1.24.0,<1.25.0)"]
events = ["mypy-boto3-events (>=1.24.0,<1.25.0)"]
essential = ["mypy-boto3-sqs (>=1.24.0,<1.25.0)", "mypy-boto3-s3 (>=1.24.0,<1.25.0)", "mypy-boto3-rds (>=1.24.0,<1.25.0)", "mypy-boto3-lambda (>=1.24.0,<1.25.0)", "mypy-boto3-ec2 (>=1.24.0,<1.25.0)", "mypy-boto3-dynamodb (>=1.24.0,<1.25.0)", "mypy-boto3-cloudformation (>=1.24.0,<1.25.0)"]
es = ["mypy-boto3-es (>=1.24.0,<1.25.0)"]
emr-serverless = ["mypy-boto3-emr-serverless (>=1.24.0,<1.25.0)"]
emr-containers = ["mypy-boto3-emr-containers (>=1.24.0,<1.25.0)"]
emr = ["mypy-boto3-emr (>=1.24.0,<1.25.0)"]
elbv2 = ["mypy-boto3-elbv2 (>=1.24.0,<1.25.0)"]
elb = ["mypy-boto3-elb (>=1.24.0,<1.25.0)"]
elastictranscoder = ["mypy-boto3-elastictranscoder (>=1.24.0,<1.25.0)"]
elasticbeanstalk = ["mypy-boto3-elasticbeanstalk (>=1.24.0,<1.25.0)"]
elasticache = ["mypy-boto3-elasticache (>=1.24.0,<1.25.0)"]
elastic-inference = ["mypy-boto3-elastic-inference (>=1.24.0,<1.25.0)"]
eks = ["mypy-boto3-eks (>=1.24.0,<1.25.0)"]
efs = ["mypy-boto3-efs (>=1.24.0,<1.25.0)"]
ecs = ["mypy-boto3-ecs (>=1.24.0,<1.25.0)"]
ecr-public = ["mypy-boto3-ecr-public (>=1.24.0,<1.25.0)"]
ecr = ["mypy-boto3-ecr (>=1.24.0,<1.25.0)"]
ec2-instance-connect = ["mypy-boto3-ec2-instance-connect (>=1.24.0,<1.25.0)"]
ec2 = ["mypy-boto3-ec2 (>=1.24.0,<1.25.0)"]
ebs = ["mypy-boto3-ebs (>=1.24.0,<1.25.0)"]
dynamodbstreams = ["mypy-boto3-dynamodbstreams (>=1.24.0,<1.25.0)"]
dynamodb = ["mypy-boto3-dynamodb (>=1.24.0,<1.25.0)"]
ds = ["mypy-boto3-ds (>=1.24.0,<1.25.0)"]
drs = ["mypy-boto3-drs (>=1.24.0,<1.25.0)"]
docdb = ["mypy-boto3-docdb (>=1.24.0,<1.25.0)"]
dms = ["mypy-boto3-dms (>=1.24.0,<1.25.0)"]
dlm = ["mypy-boto3-dlm (>=1.24.0,<1.25.0)"]
discovery = ["mypy-boto3-discovery (>=1.24.0,<1.25.0)"]
directconnect = ["mypy-boto3-directconnect (>=1.24.0,<1.25.0)"]
devops-guru = ["mypy-boto3-devops-guru (>=1.24.0,<1.25.0)"]
devicefarm = ["mypy-boto3-devicefarm (>=1.24.0,<1.25.0)"]
detective = ["mypy-boto3-detective (>=1.24.0,<1.25.0)"]
dax = ["mypy-boto3-dax (>=1.24.0,<1.25.0)"]
datasync = ["mypy-boto3-datasync (>=1.24.0,<1.25.0)"]
datapipeline = ["mypy-boto3-datapipeline (>=1.24.0,<1.25.0)"]
dataexchange = ["mypy-boto3-dataexchange (>=1.24.0,<1.25.0)"]
databrew = ["mypy-boto3-databrew (>=1.24.0,<1.25.0)"]
customer-profiles = ["mypy-boto3-customer-profiles (>=1.24.0,<1.25.0)"]
cur = ["mypy-boto3-cur (>=1.24.0,<1.25.0)"]
connectparticipant = ["mypy-boto3-connectparticipant (>=1.24.0,<1.25.0)"]
connectcampaigns = ["mypy-boto3-connectcampaigns (>=1.24.0,<1.25.0)"]
connect-contact-lens = ["mypy-boto3-connect-contact-lens (>=1.24.0,<1.25.0)"]
connect = ["mypy-boto3-connect (>=1.24.0,<1.25.0)"]
config = ["mypy-boto3-config (>=1.24.0,<1.25.0)"]
compute-optimizer = ["mypy-boto3-compute-optimizer (>=1.24.0,<1.25.0)"]
comprehendmedical = ["mypy-boto3-comprehendmedical (>=1.24.0,<1.25.0)"]
all = ["mypy-boto3-sagemaker-edge (>=1.24.0,<1.25.0)", "mypy-boto3-sagemaker-a2i-runtime (>=1.24.0,<1.25.0)", "mypy-boto3-sagemaker (>=1.24.0,<1.25.0)", "mypy-boto3-s3outposts (>=1.24.0,<1.25.0)", "mypy-boto3-s3control (>=1.24.0,<1.25.0)", "mypy-boto3-s3 (>=1.24.0,<1.25.0)", "mypy-boto3-rum (>=1.24.0,<1.25.0)", "mypy-boto3-route53resolver (>=1.24.0,<1.25.0)", "mypy-boto3-route53domains (>=1.24.0,<1.25.0)", "mypy-boto3-route53-recovery-readiness (>=1.24.0,<1.25.0)", "mypy-boto3-route53-recovery-control-config (>=1.24.0,<1.25.0)", "mypy-boto3-route53-recovery-cluster (>=1.24.0,<1.25.0)", "mypy-boto3-route53 (>=1.24.0,<1.25.0)", "mypy-boto3-rolesanywhere (>=1.24.0,<1.25.0)", "mypy-boto3-robomaker (>=1.24.0,<1.25.0)", "mypy-boto3-resourcegroupstaggingapi (>=1.24.0,<1.25.0)", "mypy-boto3-resource-groups (>=1.24.0,<1.25.0)", "mypy-boto3-resiliencehub (>=1.24.0,<1.25.0)", "mypy-boto3-rekognition (>=1.24.0,<1.25.0)", "mypy-boto3-redshift-serverless (>=1.24.0,<1.25.0)", "mypy-boto3-redshift-data (>=1.24.0,<1.25.0)", "mypy-boto3-redshift (>=1.24.0,<1.25.0)", "mypy-boto3-rds-data (>=1.24.0,<1.25.0)", "mypy-boto3-rds (>=1.24.0,<1.25.0)", "mypy-boto3-rbin (>=1.24.0,<1.25.0)", "mypy-boto3-ram (>=1.24.0,<1.25.0)", "mypy-boto3-quicksight (>=1.24.0,<1.25.0)", "mypy-boto3-qldb-session (>=1.24.0,<1.25.0)", "mypy-boto3-qldb (>=1.24.0,<1.25.0)", "mypy-boto3-proton (>=1.24.0,<1.25.0)", "mypy-boto3-privatenetworks (>=1.24.0,<1.25.0)", "mypy-boto3-pricing (>=1.24.0,<1.25.0)", "mypy-boto3-polly (>=1.24.0,<1.25.0)", "mypy-boto3-pinpoint-sms-voice-v2 (>=1.24.0,<1.25.0)", "mypy-boto3-pinpoint-sms-voice (>=1.24.0,<1.25.0)", "mypy-boto3-pinpoint-email (>=1.24.0,<1.25.0)", "mypy-boto3-pinpoint (>=1.24.0,<1.25.0)", "mypy-boto3-pi (>=1.24.0,<1.25.0)", "mypy-boto3-personalize-runtime (>=1.24.0,<1.25.0)", "mypy-boto3-personalize-events (>=1.24.0,<1.25.0)", "mypy-boto3-personalize (>=1.24.0,<1.25.0)", "mypy-boto3-panorama (>=1.24.0,<1.25.0)", "mypy-boto3-outposts (>=1.24.0,<1.25.0)", "mypy-boto3-organizations (>=1.24.0,<1.25.0)", "mypy-boto3-opsworkscm (>=1.24.0,<1.25.0)", "mypy-boto3-opsworks (>=1.24.0,<1.25.0)", "mypy-boto3-opensearch (>=1.24.0,<1.25.0)", "mypy-boto3-nimble (>=1.24.0,<1.25.0)", "mypy-boto3-networkmanager (>=1.24.0,<1.25.0)", "mypy-boto3-network-firewall (>=1.24.0,<1.25.0)", "mypy-boto3-neptune (>=1.24.0,<1.25.0)", "mypy-boto3-mwaa (>=1.24.0,<1.25.0)", "mypy-boto3-mturk (>=1.24.0,<1.25.0)", "mypy-boto3-mq (>=1.24.0,<1.25.0)", "mypy-boto3-mobile (>=1.24.0,<1.25.0)", "mypy-boto3-migrationhubstrategy (>=1.24.0,<1.25.0)", "mypy-boto3-migrationhub-config (>=1.24.0,<1.25.0)", "mypy-boto3-migration-hub-refactor-spaces (>=1.24.0,<1.25.0)", "mypy-boto3-mgn (>=1.24.0,<1.25.0)", "mypy-boto3-mgh (>=1.24.0,<1.25.0)", "mypy-boto3-meteringmarketplace (>=1.24.0,<1.25.0)", "mypy-boto3-memorydb (>=1.24.0,<1.25.0)", "mypy-boto3-mediatailor (>=1.24.0,<1.25.0)", "mypy-boto3-mediastore-data (>=1.24.0,<1.25.0)", "mypy-boto3-mediastore (>=1.24.0,<1.25.0)", "mypy-boto3-mediapackage-vod (>=1.24.0,<1.25.0)", "mypy-boto3-mediapackage (>=1.24.0,<1.25.0)", "mypy-boto3-medialive (>=1.24.0,<1.25.0)", "mypy-boto3-mediaconvert (>=1.24.0,<1.25.0)", "mypy-boto3-mediaconnect (>=1.24.0,<1.25.0)", "mypy-boto3-marketplacecommerceanalytics (>=1.24.0,<1.25.0)", "mypy-boto3-marketplace-entitlement (>=1.24.0,<1.25.0)", "mypy-boto3-marketplace-catalog (>=1.24.0,<1.25.0)", "mypy-boto3-managedblockchain (>=1.24.0,<1.25.0)", "mypy-boto3-macie2 (>=1.24.0,<1.25.0)", "mypy-boto3-macie (>=1.24.0,<1.25.0)", "mypy-boto3-machinelearning (>=1.24.0,<1.25.0)", "mypy-boto3-m2 (>=1.24.0,<1.25.0)", "mypy-boto3-lookoutvision (>=1.24.0,<1.25.0)", "mypy-boto3-lookoutmetrics (>=1.24.0,<1.25.0)", "mypy-boto3-lookoutequipment (>=1.24.0,<1.25.0)", "mypy-boto3-logs (>=1.24.0,<1.25.0)", "mypy-boto3-location (>=1.24.0,<1.25.0)", "mypy-boto3-lightsail (>=1.24.0,<1.25.0)", "mypy-boto3-license-manager-user-subscriptions (>=1.24.0,<1.25.0)", "mypy-boto3-license-manager (>=1.24.0,<1.25.0)", "mypy-boto3-lexv2-runtime (>=1.24.0,<1.25.0)", "mypy-boto3-lexv2-models (>=1.24.0,<1.25.0)", "mypy-boto3-lex-runtime (>=1.24.0,<1.25.0)", "mypy-boto3-lex-models (>=1.24.0,<1.25.0)", "mypy-boto3-lambda (>=1.24.0,<1.25.0)", "mypy-boto3-lakeformation (>=1.24.0,<1.25.0)", "mypy-boto3-kms (>=1.24.0,<1.25.0)", "mypy-boto3-kinesisvideo (>=1.24.0,<1.25.0)", "mypy-boto3-kinesisanalyticsv2 (>=1.24.0,<1.25.0)", "mypy-boto3-kinesisanalytics (>=1.24.0,<1.25.0)", "mypy-boto3-kinesis-video-signaling (>=1.24.0,<1.25.0)", "mypy-boto3-kinesis-video-media (>=1.24.0,<1.25.0)", "mypy-boto3-kinesis-video-archived-media (>=1.24.0,<1.25.0)", "mypy-boto3-kinesis (>=1.24.0,<1.25.0)", "mypy-boto3-keyspaces (>=1.24.0,<1.25.0)", "mypy-boto3-kendra (>=1.24.0,<1.25.0)", "mypy-boto3-kafkaconnect (>=1.24.0,<1.25.0)", "mypy-boto3-kafka (>=1.24.0,<1.25.0)", "mypy-boto3-ivschat (>=1.24.0,<1.25.0)", "mypy-boto3-ivs (>=1.24.0,<1.25.0)", "mypy-boto3-iotwireless (>=1.24.0,<1.25.0)", "mypy-boto3-iottwinmaker (>=1.24.0,<1.25.0)", "mypy-boto3-iotthingsgraph (>=1.24.0,<1.25.0)", "mypy-boto3-iotsitewise (>=1.24.0,<1.25.0)", "mypy-boto3-iotsecuretunneling (>=1.24.0,<1.25.0)", "mypy-boto3-iotfleethub (>=1.24.0,<1.25.0)", "mypy-boto3-iotevents-data (>=1.24.0,<1.25.0)", "mypy-boto3-iotevents (>=1.24.0,<1.25.0)", "mypy-boto3-iotdeviceadvisor (>=1.24.0,<1.25.0)", "mypy-boto3-iotanalytics (>=1.24.0,<1.25.0)", "mypy-boto3-iot1click-projects (>=1.24.0,<1.25.0)", "mypy-boto3-iot1click-devices (>=1.24.0,<1.25.0)", "mypy-boto3-iot-jobs-data (>=1.24.0,<1.25.0)", "mypy-boto3-iot-data (>=1.24.0,<1.25.0)", "mypy-boto3-iot (>=1.24.0,<1.25.0)", "mypy-boto3-inspector2 (>=1.24.0,<1.25.0)", "mypy-boto3-inspector (>=1.24.0,<1.25.0)", "mypy-boto3-importexport (>=1.24.0,<1.25.0)", "mypy-boto3-imagebuilder (>=1.24.0,<1.25.0)", "mypy-boto3-identitystore (>=1.24.0,<1.25.0)", "mypy-boto3-iam (>=1.24.0,<1.25.0)", "mypy-boto3-honeycode (>=1.24.0,<1.25.0)", "mypy-boto3-healthlake (>=1.24.0,<1.25.0)", "mypy-boto3-health (>=1.24.0,<1.25.0)", "mypy-boto3-guardduty (>=1.24.0,<1.25.0)", "mypy-boto3-groundstation (>=1.24.0,<1.25.0)", "mypy-boto3-greengrassv2 (>=1.24.0,<1.25.0)", "mypy-boto3-greengrass (>=1.24.0,<1.25.0)", "mypy-boto3-grafana (>=1.24.0,<1.25.0)", "mypy-boto3-glue (>=1.24.0,<1.25.0)", "mypy-boto3-globalaccelerator (>=1.24.0,<1.25.0)", "mypy-boto3-glacier (>=1.24.0,<1.25.0)", "mypy-boto3-gamesparks (>=1.24.0,<1.25.0)", "mypy-boto3-gamelift (>=1.24.0,<1.25.0)", "mypy-boto3-fsx (>=1.24.0,<1.25.0)", "mypy-boto3-frauddetector (>=1.24.0,<1.25.0)", "mypy-boto3-forecastquery (>=1.24.0,<1.25.0)", "mypy-boto3-forecast (>=1.24.0,<1.25.0)", "mypy-boto3-fms (>=1.24.0,<1.25.0)", "mypy-boto3-fis (>=1.24.0,<1.25.0)", "mypy-boto3-firehose (>=1.24.0,<1.25.0)", "mypy-boto3-finspace-data (>=1.24.0,<1.25.0)", "mypy-boto3-finspace (>=1.24.0,<1.25.0)", "mypy-boto3-evidently (>=1.24.0,<1.25.0)", "mypy-boto3-events (>=1.24.0,<1.25.0)", "mypy-boto3-es (>=1.24.0,<1.25.0)", "mypy-boto3-emr-serverless (>=1.24.0,<1.25.0)", "mypy-boto3-emr-containers (>=1.24.0,<1.25.0)", "mypy-boto3-emr (>=1.24.0,<1.25.0)", "mypy-boto3-elbv2 (>=1.24.0,<1.25.0)", "mypy-boto3-elb (>=1.24.0,<1.25.0)", "mypy-boto3-elastictranscoder (>=1.24.0,<1.25.0)", "mypy-boto3-elasticbeanstalk (>=1.24.0,<1.25.0)", "mypy-boto3-elasticache (>=1.24.0,<1.25.0)", "mypy-boto3-elastic-inference (>=1.24.0,<1.25.0)", "mypy-boto3-eks (>=1.24.0,<1.25.0)", "mypy-boto3-efs (>=1.24.0,<1.25.0)", "mypy-boto3-ecs (>=1.24.0,<1.25.0)", "mypy-boto3-ecr-public (>=1.24.0,<1.25.0)", "mypy-boto3-ecr (>=1.24.0,<1.25.0)", "mypy-boto3-ec2-instance-connect (>=1.24.0,<1.25.0)", "mypy-boto3-ec2 (>=1.24.0,<1.25.0)", "mypy-boto3-ebs (>=1.24.0,<1.25.0)", "mypy-boto3-dynamodbstreams (>=1.24.0,<1.25.0)", "mypy-boto3-dynamodb (>=1.24.0,<1.25.0)", "mypy-boto3-ds (>=1.24.0,<1.25.0)", "mypy-boto3-drs (>=1.24.0,<1.25.0)", "mypy-boto3-docdb (>=1.24.0,<1.25.0)", "mypy-boto3-dms (>=1.24.0,<1.25.0)", "mypy-boto3-dlm (>=1.24.0,<1.25.0)", "mypy-boto3-discovery (>=1.24.0,<1.25.0)", "mypy-boto3-directconnect (>=1.24.0,<1.25.0)", "mypy-boto3-devops-guru (>=1.24.0,<1.25.0)", "mypy-boto3-devicefarm (>=1.24.0,<1.25.0)", "mypy-boto3-detective (>=1.24.0,<1.25.0)", "mypy-boto3-dax (>=1.24.0,<1.25.0)", "mypy-boto3-datasync (>=1.24.0,<1.25.0)", "mypy-boto3-xray (>=1.24.0,<1.25.0)", "mypy-boto3-workspaces-web (>=1.24.0,<1.25.0)", "mypy-boto3-workspaces (>=1.24.0,<1.25.0)", "mypy-boto3-workmailmessageflow (>=1.24.0,<1.25.0)", "mypy-boto3-workmail (>=1.24.0,<1.25.0)", "mypy-boto3-worklink (>=1.24.0,<1.25.0)", "mypy-boto3-workdocs (>=1.24.0,<1.25.0)", "mypy-boto3-wisdom (>=1.24.0,<1.25.0)", "mypy-boto3-wellarchitected (>=1.24.0,<1.25.0)", "mypy-boto3-wafv2 (>=1.24.0,<1.25.0)", "mypy-boto3-waf-regional (>=1.24.0,<1.25.0)", "mypy-boto3-waf (>=1.24.0,<1.25.0)", "mypy-boto3-voice-id (>=1.24.0,<1.25.0)", "mypy-boto3-translate (>=1.24.0,<1.25.0)", "mypy-boto3-transfer (>=1.24.0,<1.25.0)", "mypy-boto3-transcribe (>=1.24.0,<1.25.0)", "mypy-boto3-timestream-write (>=1.24.0,<1.25.0)", "mypy-boto3-timestream-query (>=1.24.0,<1.25.0)", "mypy-boto3-textract (>=1.24.0,<1.25.0)", "mypy-boto3-synthetics (>=1.24.0,<1.25.0)", "mypy-boto3-swf (>=1.24.0,<1.25.0)", "mypy-boto3-support (>=1.24.0,<1.25.0)", "mypy-boto3-sts (>=1.24.0,<1.25.0)", "mypy-boto3-storagegateway (>=1.24.0,<1.25.0)", "mypy-boto3-stepfunctions (>=1.24.0,<1.25.0)", "mypy-boto3-sso-oidc (>=1.24.0,<1.25.0)", "mypy-boto3-sso-admin (>=1.24.0,<1.25.0)", "mypy-boto3-sso (>=1.24.0,<1.25.0)", "mypy-boto3-ssm-incidents (>=1.24.0,<1.25.0)", "mypy-boto3-ssm-contacts (>=1.24.0,<1.25.0)", "mypy-boto3-ssm (>=1.24.0,<1.25.0)", "mypy-boto3-sqs (>=1.24.0,<1.25.0)", "mypy-boto3-sns (>=1.24.0,<1.25.0)", "mypy-boto3-snowball (>=1.24.0,<1.25.0)", "mypy-boto3-snow-device-management (>=1.24.0,<1.25.0)", "mypy-boto3-sms-voice (>=1.24.0,<1.25.0)", "mypy-boto3-sms (>=1.24.0,<1.25.0)", "mypy-boto3-signer (>=1.24.0,<1.25.0)", "mypy-boto3-shield (>=1.24.0,<1.25.0)", "mypy-boto3-sesv2 (>=1.24.0,<1.25.0)", "mypy-boto3-ses (>=1.24.0,<1.25.0)", "mypy-boto3-servicediscovery (>=1.24.0,<1.25.0)", "mypy-boto3-servicecatalog-appregistry (>=1.24.0,<1.25.0)", "mypy-boto3-servicecatalog (>=1.24.0,<1.25.0)", "mypy-boto3-service-quotas (>=1.24.0,<1.25.0)", "mypy-boto3-serverlessrepo (>=1.24.0,<1.25.0)", "mypy-boto3-securityhub (>=1.24.0,<1.25.0)", "mypy-boto3-secretsmanager (>=1.24.0,<1.25.0)", "mypy-boto3-sdb (>=1.24.0,<1.25.0)", "mypy-boto3-schemas (>=1.24.0,<1.25.0)", "mypy-boto3-savingsplans (>=1.24.0,<1.25.0)", "mypy-boto3-sagemaker-runtime (>=1.24.0,<1.25.0)", "mypy-boto3-sagemaker-featurestore-runtime (>=1.24.0,<1.25.0)", "mypy-boto3-datapipeline (>=1.24.0,<1.25.0)", "mypy-boto3-dataexchange (>=1.24.0,<1.25.0)", "mypy-boto3-databrew (>=1.24.0,<1.25.0)", "mypy-boto3-customer-profiles (>=1.24.0,<1.25.0)", "mypy-boto3-cur (>=1.24.0,<1.25.0)", "mypy-boto3-connectparticipant (>=1.24.0,<1.25.0)", "mypy-boto3-connectcampaigns (>=1.24.0,<1.25.0)", "mypy-boto3-connect-contact-lens (>=1.24.0,<1.25.0)", "mypy-boto3-connect (>=1.24.0,<1.25.0)", "mypy-boto3-config (>=1.24.0,<1.25.0)", "mypy-boto3-compute-optimizer (>=1.24.0,<1.25.0)", "mypy-boto3-comprehendmedical (>=1.24.0,<1.25.0)", "mypy-boto3-comprehend (>=1.24.0,<1.25.0)", "mypy-boto3-cognito-sync (>=1.24.0,<1.25.0)", "mypy-boto3-cognito-idp (>=1.24.0,<1.25.0)", "mypy-boto3-cognito-identity (>=1.24.0,<1.25.0)", "mypy-boto3-codestar-notifications (>=1.24.0,<1.25.0)", "mypy-boto3-codestar-connections (>=1.24.0,<1.25.0)", "mypy-boto3-codestar (>=1.24.0,<1.25.0)", "mypy-boto3-codepipeline (>=1.24.0,<1.25.0)", "mypy-boto3-codeguruprofiler (>=1.24.0,<1.25.0)", "mypy-boto3-codeguru-reviewer (>=1.24.0,<1.25.0)", "mypy-boto3-codedeploy (>=1.24.0,<1.25.0)", "mypy-boto3-codecommit (>=1.24.0,<1.25.0)", "mypy-boto3-codebuild (>=1.24.0,<1.25.0)", "mypy-boto3-codeartifact (>=1.24.0,<1.25.0)", "mypy-boto3-cloudwatch (>=1.24.0,<1.25.0)", "mypy-boto3-cloudtrail (>=1.24.0,<1.25.0)", "mypy-boto3-cloudsearchdomain (>=1.24.0,<1.25.0)", "mypy-boto3-cloudsearch (>=1.24.0,<1.25.0)", "mypy-boto3-cloudhsmv2 (>=1.24.0,<1.25.0)", "mypy-boto3-cloudhsm (>=1.24.0,<1.25.0)", "mypy-boto3-cloudfront (>=1.24.0,<1.25.0)", "mypy-boto3-cloudformation (>=1.24.0,<1.25.0)", "mypy-boto3-clouddirectory (>=1.24.0,<1.25.0)", "mypy-boto3-cloudcontrol (>=1.24.0,<1.25.0)", "mypy-boto3-cloud9 (>=1.24.0,<1.25.0)", "mypy-boto3-chime-sdk-messaging (>=1.24.0,<1.25.0)", "mypy-boto3-chime-sdk-meetings (>=1.24.0,<1.25.0)", "mypy-boto3-chime-sdk-media-pipelines (>=1.24.0,<1.25.0)", "mypy-boto3-chime-sdk-identity (>=1.24.0,<1.25.0)", "mypy-boto3-chime (>=1.24.0,<1.25.0)", "mypy-boto3-ce (>=1.24.0,<1.25.0)", "mypy-boto3-budgets (>=1.24.0,<1.25.0)", "mypy-boto3-braket (>=1.24.0,<1.25.0)", "mypy-boto3-billingconductor (>=1.24.0,<1.25.0)", "mypy-boto3-batch (>=1.24.0,<1.25.0)", "mypy-boto3-backupstorage (>=1.24.0,<1.25.0)", "mypy-boto3-backup-gateway (>=1.24.0,<1.25.0)", "mypy-boto3-backup (>=1.24.0,<1.25.0)", "mypy-boto3-autoscaling-plans (>=1.24.0,<1.25.0)", "mypy-boto3-autoscaling (>=1.24.0,<1.25.0)", "mypy-boto3-auditmanager (>=1.24.0,<1.25.0)", "mypy-boto3-athena (>=1.24.0,<1.25.0)", "mypy-boto3-appsync (>=1.24.0,<1.25.0)", "mypy-boto3-appstream (>=1.24.0,<1.25.0)", "mypy-boto3-apprunner (>=1.24.0,<1.25.0)", "mypy-boto3-appmesh (>=1.24.0,<1.25.0)", "mypy-boto3-applicationcostprofiler (>=1.24.0,<1.25.0)", "mypy-boto3-application-insights (>=1.24.0,<1.25.0)", "mypy-boto3-application-autoscaling (>=1.24.0,<1.25.0)", "mypy-boto3-appintegrations (>=1.24.0,<1.25.0)", "mypy-boto3-appflow (>=1.24.0,<1.25.0)", "mypy-boto3-appconfigdata (>=1.24.0,<1.25.0)", "mypy-boto3-appconfig (>=1.24.0,<1.25.0)", "mypy-boto3-apigatewayv2 (>=1.24.0,<1.25.0)", "mypy-boto3-apigatewaymanagementapi (>=1.24.0,<1.25.0)", "mypy-boto3-apigateway (>=1.24.0,<1.25.0)", "mypy-boto3-amplifyuibuilder (>=1.24.0,<1.25.0)", "mypy-boto3-amplifybackend (>=1.24.0,<1.25.0)", "mypy-boto3-amplify (>=1.24.0,<1.25.0)", "mypy-boto3-amp (>=1.24.0,<1.25.0)", "mypy-boto3-alexaforbusiness (>=1.24.0,<1.25.0)", "mypy-boto3-acm-pca (>=1.24.0,<1.25.0)", "mypy-boto3-acm (>=1.24.0,<1.25.0)", "mypy-boto3-account (>=1.24.0,<1.25.0)", "mypy-boto3-accessanalyzer (>=1.24.0,<1.25.0)"]
ssm = ["mypy-boto3-ssm (>=1.24.0,<1.25.0)"]
sqs = ["mypy-boto3-sqs (>=1.24.0,<1.25.0)"]
sns = ["mypy-boto3-sns (>=1.24.0,<1.25.0)"]
snowball = ["mypy-boto3-snowball (>=1.24.0,<1.25.0)"]
snow-device-management = ["mypy-boto3-snow-device-management (>=1.24.0,<1.25.0)"]
sms-voice = ["mypy-boto3-sms-voice (>=1.24.0,<1.25.0)"]
sms = ["mypy-boto3-sms (>=1.24.0,<1.25.0)"]
signer = ["mypy-boto3-signer (>=1.24.0,<1.25.0)"]
shield = ["mypy-boto3-shield (>=1.24.0,<1.25.0)"]
sesv2 = ["mypy-boto3-sesv2 (>=1.24.0,<1.25.0)"]
ses = ["mypy-boto3-ses (>=1.24.0,<1.25.0)"]
servicediscovery = ["mypy-boto3-servicediscovery (>=1.24.0,<1.25.0)"]
servicecatalog-appregistry = ["mypy-boto3-servicecatalog-appregistry (>=1.24.0,<1.25.0)"]
servicecatalog = ["mypy-boto3-servicecatalog (>=1.24.0,<1.25.0)"]
service-quotas = ["mypy-boto3-service-quotas (>=1.24.0,<1.25.0)"]
serverlessrepo = ["mypy-boto3-serverlessrepo (>=1.24.0,<1.25.0)"]
securityhub = ["mypy-boto3-securityhub (>=1.24.0,<1.25.0)"]
secretsmanager = ["mypy-boto3-secretsmanager (>=1.24.0,<1.25.0)"]
sdb = ["mypy-boto3-sdb (>=1.24.0,<1.25.0)"]
schemas = ["mypy-boto3-schemas (>=1.24.0,<1.25.0)"]
savingsplans = ["mypy-boto3-savingsplans (>=1.24.0,<1.25.0)"]
sagemaker-runtime = ["mypy-boto3-sagemaker-runtime (>=1.24.0,<1.25.0)"]
sagemaker-featurestore-runtime = ["mypy-boto3-sagemaker-featurestore-runtime (>=1.24.0,<1.25.0)"]
sagemaker-edge = ["mypy-boto3-sagemaker-edge (>=1.24.0,<1.25.0)"]
sagemaker-a2i-runtime = ["mypy-boto3-sagemaker-a2i-runtime (>=1.24.0,<1.25.0)"]
sagemaker = ["mypy-boto3-sagemaker (>=1.24.0,<1.25.0)"]
s3outposts = ["mypy-boto3-s3outposts (>=1.24.0,<1.25.0)"]
s3control = ["mypy-boto3-s3control (>=1.24.0,<1.25.0)"]
s3 = ["mypy-boto3-s3 (>=1.24.0,<1.25.0)"]
rum = ["mypy-boto3-rum (>=1.24.0,<1.25.0)"]
route53resolver = ["mypy-boto3-route53resolver (>=1.24.0,<1.25.0)"]
route53domains = ["mypy-boto3-route53domains (>=1.24.0,<1.25.0)"]
route53-recovery-readiness = ["mypy-boto3-route53-recovery-readiness (>=1.24.0,<1.25.0)"]
route53-recovery-control-config = ["mypy-boto3-route53-recovery-control-config (>=1.24.0,<1.25.0)"]
route53-recovery-cluster = ["mypy-boto3-route53-recovery-cluster (>=1.24.0,<1.25.0)"]
route53 = ["mypy-boto3-route53 (>=1.24.0,<1.25.0)"]
rolesanywhere = ["mypy-boto3-rolesanywhere (>=1.24.0,<1.25.0)"]
robomaker = ["mypy-boto3-robomaker (>=1.24.0,<1.25.0)"]
resourcegroupstaggingapi = ["mypy-boto3-resourcegroupstaggingapi (>=1.24.0,<1.25.0)"]
resource-groups = ["mypy-boto3-resource-groups (>=1.24.0,<1.25.0)"]
resiliencehub = ["mypy-boto3-resiliencehub (>=1.24.0,<1.25.0)"]
rekognition = ["mypy-boto3-rekognition (>=1.24.0,<1.25.0)"]
redshift-serverless = ["mypy-boto3-redshift-serverless (>=1.24.0,<1.25.0)"]
redshift-data = ["mypy-boto3-redshift-data (>=1.24.0,<1.25.0)"]
redshift = ["mypy-boto3-redshift (>=1.24.0,<1.25.0)"]
rds-data = ["mypy-boto3-rds-data (>=1.24.0,<1.25.0)"]
rds = ["mypy-boto3-rds (>=1.24.0,<1.25.0)"]
rbin = ["mypy-boto3-rbin (>=1.24.0,<1.25.0)"]
ram = ["mypy-boto3-ram (>=1.24.0,<1.25.0)"]
quicksight = ["mypy-boto3-quicksight (>=1.24.0,<1.25.0)"]
qldb-session = ["mypy-boto3-qldb-session (>=1.24.0,<1.25.0)"]
qldb = ["mypy-boto3-qldb (>=1.24.0,<1.25.0)"]
proton = ["mypy-boto3-proton (>=1.24.0,<1.25.0)"]
privatenetworks = ["mypy-boto3-privatenetworks (>=1.24.0,<1.25.0)"]
pricing = ["mypy-boto3-pricing (>=1.24.0,<1.25.0)"]
polly = ["mypy-boto3-polly (>=1.24.0,<1.25.0)"]
pinpoint-sms-voice-v2 = ["mypy-boto3-pinpoint-sms-voice-v2 (>=1.24.0,<1.25.0)"]
pinpoint-sms-voice = ["mypy-boto3-pinpoint-sms-voice (>=1.24.0,<1.25.0)"]
pinpoint-email = ["mypy-boto3-pinpoint-email (>=1.24.0,<1.25.0)"]
pinpoint = ["mypy-boto3-pinpoint (>=1.24.0,<1.25.0)"]
pi = ["mypy-boto3-pi (>=1.24.0,<1.25.0)"]
personalize-runtime = ["mypy-boto3-personalize-runtime (>=1.24.0,<1.25.0)"]
personalize-events = ["mypy-boto3-personalize-events (>=1.24.0,<1.25.0)"]
personalize = ["mypy-boto3-personalize (>=1.24.0,<1.25.0)"]
panorama = ["mypy-boto3-panorama (>=1.24.0,<1.25.0)"]
outposts = ["mypy-boto3-outposts (>=1.24.0,<1.25.0)"]
organizations = ["mypy-boto3-organizations (>=1.24.0,<1.25.0)"]
opsworkscm = ["mypy-boto3-opsworkscm (>=1.24.0,<1.25.0)"]
opsworks = ["mypy-boto3-opsworks (>=1.24.0,<1.25.0)"]
opensearch = ["mypy-boto3-opensearch (>=1.24.0,<1.25.0)"]
nimble = ["mypy-boto3-nimble (>=1.24.0,<1.25.0)"]
networkmanager = ["mypy-boto3-networkmanager (>=1.24.0,<1.25.0)"]
network-firewall = ["mypy-boto3-network-firewall (>=1.24.0,<1.25.0)"]
neptune = ["mypy-boto3-neptune (>=1.24.0,<1.25.0)"]
mwaa = ["mypy-boto3-mwaa (>=1.24.0,<1.25.0)"]
mturk = ["mypy-boto3-mturk (>=1.24.0,<1.25.0)"]
mq = ["mypy-boto3-mq (>=1.24.0,<1.25.0)"]
mobile = ["mypy-boto3-mobile (>=1.24.0,<1.25.0)"]
migrationhubstrategy = ["mypy-boto3-migrationhubstrategy (>=1.24.0,<1.25.0)"]
migrationhub-config = ["mypy-boto3-migrationhub-config (>=1.24.0,<1.25.0)"]
migration-hub-refactor-spaces = ["mypy-boto3-migration-hub-refactor-spaces (>=1.24.0,<1.25.0)"]
mgn = ["mypy-boto3-mgn (>=1.24.0,<1.25.0)"]
mgh = ["mypy-boto3-mgh (>=1.24.0,<1.25.0)"]
meteringmarketplace = ["mypy-boto3-meteringmarketplace (>=1.24.0,<1.25.0)"]
memorydb = ["mypy-boto3-memorydb (>=1.24.0,<1.25.0)"]
mediatailor = ["mypy-boto3-mediatailor (>=1.24.0,<1.25.0)"]
mediastore-data = ["mypy-boto3-mediastore-data (>=1.24.0,<1.25.0)"]
mediastore = ["mypy-boto3-mediastore (>=1.24.0,<1.25.0)"]
mediapackage-vod = ["mypy-boto3-mediapackage-vod (>=1.24.0,<1.25.0)"]
mediapackage = ["mypy-boto3-mediapackage (>=1.24.0,<1.25.0)"]
medialive = ["mypy-boto3-medialive (>=1.24.0,<1.25.0)"]
mediaconvert = ["mypy-boto3-mediaconvert (>=1.24.0,<1.25.0)"]
mediaconnect = ["mypy-boto3-mediaconnect (>=1.24.0,<1.25.0)"]
marketplacecommerceanalytics = ["mypy-boto3-marketplacecommerceanalytics (>=1.24.0,<1.25.0)"]
marketplace-entitlement = ["mypy-boto3-marketplace-entitlement (>=1.24.0,<1.25.0)"]
marketplace-catalog = ["mypy-boto3-marketplace-catalog (>=1.24.0,<1.25.0)"]
managedblockchain = ["mypy-boto3-managedblockchain (>=1.24.0,<1.25.0)"]
macie2 = ["mypy-boto3-macie2 (>=1.24.0,<1.25.0)"]
macie = ["mypy-boto3-macie (>=1.24.0,<1.25.0)"]
machinelearning = ["mypy-boto3-machinelearning (>=1.24.0,<1.25.0)"]
m2 = ["mypy-boto3-m2 (>=1.24.0,<1.25.0)"]
lookoutvision = ["mypy-boto3-lookoutvision (>=1.24.0,<1.25.0)"]
lookoutmetrics = ["mypy-boto3-lookoutmetrics (>=1.24.0,<1.25.0)"]
lookoutequipment = ["mypy-boto3-lookoutequipment (>=1.24.0,<1.25.0)"]
logs = ["mypy-boto3-logs (>=1.24.0,<1.25.0)"]
location = ["mypy-boto3-location (>=1.24.0,<1.25.0)"]
lightsail = ["mypy-boto3-lightsail (>=1.24.0,<1.25.0)"]
license-manager-user-subscriptions = ["mypy-boto3-license-manager-user-subscriptions (>=1.24.0,<1.25.0)"]
license-manager = ["mypy-boto3-license-manager (>=1.24.0,<1.25.0)"]
lexv2-runtime = ["mypy-boto3-lexv2-runtime (>=1.24.0,<1.25.0)"]
lexv2-models = ["mypy-boto3-lexv2-models (>=1.24.0,<1.25.0)"]
lex-runtime = ["mypy-boto3-lex-runtime (>=1.24.0,<1.25.0)"]
xray = ["mypy-boto3-xray (>=1.24.0,<1.25.0)"]
workspaces-web = ["mypy-boto3-workspaces-web (>=1.24.0,<1.25.0)"]
workspaces = ["mypy-boto3-workspaces (>=1.24.0,<1.25.0)"]
workmailmessageflow = ["mypy-boto3-workmailmessageflow (>=1.24.0,<1.25.0)"]
workmail = ["mypy-boto3-workmail (>=1.24.0,<1.25.0)"]
worklink = ["mypy-boto3-worklink (>=1.24.0,<1.25.0)"]
workdocs = ["mypy-boto3-workdocs (>=1.24.0,<1.25.0)"]
wisdom = ["mypy-boto3-wisdom (>=1.24.0,<1.25.0)"]
wellarchitected = ["mypy-boto3-wellarchitected (>=1.24.0,<1.25.0)"]
wafv2 = ["mypy-boto3-wafv2 (>=1.24.0,<1.25.0)"]
waf-regional = ["mypy-boto3-waf-regional (>=1.24.0,<1.25.0)"]
waf = ["mypy-boto3-waf (>=1.24.0,<1.25.0)"]
voice-id = ["mypy-boto3-voice-id (>=1.24.0,<1.25.0)"]
translate = ["mypy-boto3-translate (>=1.24.0,<1.25.0)"]
transfer = ["mypy-boto3-transfer (>=1.24.0,<1.25.0)"]
transcribe = ["mypy-boto3-transcribe (>=1.24.0,<1.25.0)"]
timestream-write = ["mypy-boto3-timestream-write (>=1.24.0,<1.25.0)"]
timestream-query = ["mypy-boto3-timestream-query (>=1.24.0,<1.25.0)"]
textract = ["mypy-boto3-textract (>=1.24.0,<1.25.0)"]
synthetics = ["mypy-boto3-synthetics (>=1.24.0,<1.25.0)"]
swf = ["mypy-boto3-swf (>=1.24.0,<1.25.0)"]
support = ["mypy-boto3-support (>=1.24.0,<1.25.0)"]
sts = ["mypy-boto3-sts (>=1.24.0,<1.25.0)"]
storagegateway = ["mypy-boto3-storagegateway (>=1.24.0,<1.25.0)"]
stepfunctions = ["mypy-boto3-stepfunctions (>=1.24.0,<1.25.0)"]
sso-oidc = ["mypy-boto3-sso-oidc (>=1.24.0,<1.25.0)"]
sso-admin = ["mypy-boto3-sso-admin (>=1.24.0,<1.25.0)"]
sso = ["mypy-boto3-sso (>=1.24.0,<1.25.0)"]
ssm-incidents = ["mypy-boto3-ssm-incidents (>=1.24.0,<1.25.0)"]
ssm-contacts = ["mypy-boto3-ssm-contacts (>=1.24.0,<1.25.0)"]
comprehend = ["mypy-boto3-comprehend (>=1.24.0,<1.25.0)"]
cognito-sync = ["mypy-boto3-cognito-sync (>=1.24.0,<1.25.0)"]
cognito-idp = ["mypy-boto3-cognito-idp (>=1.24.0,<1.25.0)"]
cognito-identity = ["mypy-boto3-cognito-identity (>=1.24.0,<1.25.0)"]
codestar-notifications = ["mypy-boto3-codestar-notifications (>=1.24.0,<1.25.0)"]
codestar-connections = ["mypy-boto3-codestar-connections (>=1.24.0,<1.25.0)"]
codestar = ["mypy-boto3-codestar (>=1.24.0,<1.25.0)"]
codepipeline = ["mypy-boto3-codepipeline (>=1.24.0,<1.25.0)"]
codeguruprofiler = ["mypy-boto3-codeguruprofiler (>=1.24.0,<1.25.0)"]
codeguru-reviewer = ["mypy-boto3-codeguru-reviewer (>=1.24.0,<1.25.0)"]
codedeploy = ["mypy-boto3-codedeploy (>=1.24.0,<1.25.0)"]
codecommit = ["mypy-boto3-codecommit (>=1.24.0,<1.25.0)"]
codebuild = ["mypy-boto3-codebuild (>=1.24.0,<1.25.0)"]
codeartifact = ["mypy-boto3-codeartifact (>=1.24.0,<1.25.0)"]
cloudwatch = ["mypy-boto3-cloudwatch (>=1.24.0,<1.25.0)"]
cloudtrail = ["mypy-boto3-cloudtrail (>=1.24.0,<1.25.0)"]
cloudsearchdomain = ["mypy-boto3-cloudsearchdomain (>=1.24.0,<1.25.0)"]
cloudsearch = ["mypy-boto3-cloudsearch (>=1.24.0,<1.25.0)"]
cloudhsmv2 = ["mypy-boto3-cloudhsmv2 (>=1.24.0,<1.25.0)"]
cloudhsm = ["mypy-boto3-cloudhsm (>=1.24.0,<1.25.0)"]
cloudfront = ["mypy-boto3-cloudfront (>=1.24.0,<1.25.0)"]
cloudformation = ["mypy-boto3-cloudformation (>=1.24.0,<1.25.0)"]
clouddirectory = ["mypy-boto3-clouddirectory (>=1.24.0,<1.25.0)"]
cloudcontrol = ["mypy-boto3-cloudcontrol (>=1.24.0,<1.25.0)"]
cloud9 = ["mypy-boto3-cloud9 (>=1.24.0,<1.25.0)"]
chime-sdk-messaging = ["mypy-boto3-chime-sdk-messaging (>=1.24.0,<1.25.0)"]
chime-sdk-meetings = ["mypy-boto3-chime-sdk-meetings (>=1.24.0,<1.25.0)"]
chime-sdk-media-pipelines = ["mypy-boto3-chime-sdk-media-pipelines (>=1.24.0,<1.25.0)"]
chime-sdk-identity = ["mypy-boto3-chime-sdk-identity (>=1.24.0,<1.25.0)"]
chime = ["mypy-boto3-chime (>=1.24.0,<1.25.0)"]
ce = ["mypy-boto3-ce (>=1.24.0,<1.25.0)"]
budgets = ["mypy-boto3-budgets (>=1.24.0,<1.25.0)"]
braket = ["mypy-boto3-braket (>=1.24.0,<1.25.0)"]
billingconductor = ["mypy-boto3-billingconductor (>=1.24.0,<1.25.0)"]
batch = ["mypy-boto3-batch (>=1.24.0,<1.25.0)"]
backupstorage = ["mypy-boto3-backupstorage (>=1.24.0,<1.25.0)"]
backup-gateway = ["mypy-boto3-backup-gateway (>=1.24.0,<1.25.0)"]
backup = ["mypy-boto3-backup (>=1.24.0,<1.25.0)"]
autoscaling-plans = ["mypy-boto3-autoscaling-plans (>=1.24.0,<1.25.0)"]
autoscaling = ["mypy-boto3-autoscaling (>=1.24.0,<1.25.0)"]
auditmanager = ["mypy-boto3-auditmanager (>=1.24.0,<1.25.0)"]
athena = ["mypy-boto3-athena (>=1.24.0,<1.25.0)"]
appsync = ["mypy-boto3-appsync (>=1.24.0,<1.25.0)"]
appstream = ["mypy-boto3-appstream (>=1.24.0,<1.25.0)"]
apprunner = ["mypy-boto3-apprunner (>=1.24.0,<1.25.0)"]
appmesh = ["mypy-boto3-appmesh (>=1.24.0,<1.25.0)"]
applicationcostprofiler = ["mypy-boto3-applicationcostprofiler (>=1.24.0,<1.25.0)"]
application-insights = ["mypy-boto3-application-insights (>=1.24.0,<1.25.0)"]
application-autoscaling = ["mypy-boto3-application-autoscaling (>=1.24.0,<1.25.0)"]
appintegrations = ["mypy-boto3-appintegrations (>=1.24.0,<1.25.0)"]
appflow = ["mypy-boto3-appflow (>=1.24.0,<1.25.0)"]
appconfigdata = ["mypy-boto3-appconfigdata (>=1.24.0,<1.25.0)"]
appconfig = ["mypy-boto3-appconfig (>=1.24.0,<1.25.0)"]
apigatewayv2 = ["mypy-boto3-apigatewayv2 (>=1.24.0,<1.25.0)"]
apigatewaymanagementapi = ["mypy-boto3-apigatewaymanagementapi (>=1.24.0,<1.25.0)"]
apigateway = ["mypy-boto3-apigateway (>=1.24.0,<1.25.0)"]
amplifyuibuilder = ["mypy-boto3-amplifyuibuilder (>=1.24.0,<1.25.0)"]
amplifybackend = ["mypy-boto3-amplifybackend (>=1.24.0,<1.25.0)"]
amplify = ["mypy-boto3-amplify (>=1.24.0,<1.25.0)"]
amp = ["mypy-boto3-amp (>=1.24.0,<1.25.0)"]
alexaforbusiness = ["mypy-boto3-alexaforbusiness (>=1.24.0,<1.25.0)"]
acm-pca = ["mypy-boto3-acm-pca (>=1.24.0,<1.25.0)"]
acm = ["mypy-boto3-acm (>=1.24.0,<1.25.0)"]
account = ["mypy-boto3-account (>=1.24.0,<1.25.0)"]
accessanalyzer = ["mypy-boto3-accessanalyzer (>=1.24.0,<1.25.0)"]

[[package]]
name = "botocore"
version = "1.27.18"
description = "Low-level, data-driven core of boto 3."
category = "main"
optional = false
python-versions = ">= 3.7"

[package.dependencies]
jmespath = ">=0.7.1,<2.0.0"
python-dateutil = ">=2.1,<3.0.0"
urllib3 = ">=1.25.4,<1.27"

[package.extras]
crt = ["awscrt (==0.13.8)"]

[[package]]
name = "botocore-stubs"
version = "1.27.18"
description = "Type annotations for botocore 1.27.18 generated with mypy-boto3-builder 7.7.1"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
typing-extensions = ">=4.1.0"

[[package]]
name = "brotli"
version = "1.0.9"
description = "Python bindings for the Brotli compression library"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "catalogue"
version = "2.0.7"
description = "Super lightweight function registries for your library"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "cchardet"
version = "2.1.7"
description = "cChardet is high speed universal character encoding detector."
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "certifi"
version = "2022.6.15"
description = "Python package for providing Mozilla's CA Bundle."
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "cffi"
version = "1.15.0"
description = "Foreign Function Interface for Python calling C code."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
pycparser = "*"

[[package]]
name = "cfgv"
version = "3.3.1"
description = "Validate configuration and produce human readable error messages."
category = "dev"
optional = false
python-versions = ">=3.6.1"

[[package]]
name = "chardet"
version = "4.0.0"
description = "Universal encoding detector for Python 2 and 3"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[[package]]
name = "charset-normalizer"
version = "2.1.0"
description = "The Real First Universal Charset Detector. Open, modern and actively maintained alternative to Chardet."
category = "main"
optional = false
python-versions = ">=3.6.0"

[package.extras]
unicode_backport = ["unicodedata2"]

[[package]]
name = "click"
version = "8.1.3"
description = "Composable command line interface toolkit"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
colorama = {version = "*", markers = "platform_system == \"Windows\""}

[[package]]
name = "colorama"
version = "0.4.5"
description = "Cross-platform colored terminal text."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[[package]]
name = "conllu"
version = "4.4.2"
description = "CoNLL-U Parser parses a CoNLL-U formatted string into a nested python dictionary"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "cryptography"
version = "37.0.3"
description = "cryptography is a package which provides cryptographic recipes and primitives to Python developers."
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
cffi = ">=1.12"

[package.extras]
docs = ["sphinx (>=1.6.5,!=1.8.0,!=3.1.0,!=3.1.1)", "sphinx-rtd-theme"]
docstest = ["pyenchant (>=1.6.11)", "twine (>=1.12.0)", "sphinxcontrib-spelling (>=4.0.1)"]
pep8test = ["black", "flake8", "flake8-import-order", "pep8-naming"]
sdist = ["setuptools_rust (>=0.11.4)"]
ssh = ["bcrypt (>=3.1.5)"]
test = ["pytest (>=6.2.0)", "pytest-benchmark", "pytest-cov", "pytest-subtests", "pytest-xdist", "pretend", "iso8601", "pytz", "hypothesis (>=1.11.4,!=3.79.2)"]

[[package]]
name = "cymem"
version = "2.0.6"
description = "Manage calls to calloc/free through Cython"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "deprecated"
version = "1.2.13"
description = "Python @deprecated decorator to deprecate old python classes, functions or methods."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[package.dependencies]
wrapt = ">=1.10,<2"

[package.extras]
dev = ["pytest-cov", "pytest", "PyTest-Cov (<2.6)", "PyTest (<5)", "zipp (<2)", "sphinxcontrib-websupport (<2)", "configparser (<5)", "importlib-resources (<4)", "importlib-metadata (<3)", "sphinx (<2)", "bump2version (<1)", "tox"]

[[package]]
name = "distlib"
version = "0.3.5"
description = "Distribution utilities"
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "dnspython"
version = "2.2.1"
description = "DNS toolkit"
category = "main"
optional = false
python-versions = ">=3.6,<4.0"

[package.extras]
wmi = ["wmi (>=1.5.1,<2.0.0)"]
trio = ["trio (>=0.14,<0.20)"]
curio = ["sniffio (>=1.1,<2.0)", "curio (>=1.2,<2.0)"]
doh = ["requests-toolbelt (>=0.9.1,<0.10.0)", "requests (>=2.23.0,<3.0.0)", "httpx (>=0.21.1)", "h2 (>=4.1.0)"]
idna = ["idna (>=2.1,<4.0)"]
dnssec = ["cryptography (>=2.6,<37.0)"]

[[package]]
name = "docx2txt"
version = "0.8"
description = "A pure python-based utility to extract text and images from docx files."
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "email-validator"
version = "1.2.1"
description = "A robust email syntax and deliverability validation library."
category = "main"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,>=2.7"

[package.dependencies]
dnspython = ">=1.15.0"
idna = ">=2.0.0"

[[package]]
name = "et-xmlfile"
version = "1.1.0"
description = "An implementation of lxml.xmlfile for the standard library"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "fastapi"
version = "0.75.2"
description = "FastAPI framework, high performance, easy to learn, fast to code, ready for production"
category = "main"
optional = false
python-versions = ">=3.6.1"

[package.dependencies]
email_validator = {version = ">=1.1.1,<2.0.0", optional = true, markers = "extra == \"all\""}
itsdangerous = {version = ">=1.1.0,<3.0.0", optional = true, markers = "extra == \"all\""}
jinja2 = {version = ">=2.11.2,<4.0.0", optional = true, markers = "extra == \"all\""}
orjson = {version = ">=3.2.1,<4.0.0", optional = true, markers = "extra == \"all\""}
pydantic = ">=1.6.2,<1.7 || >1.7,<1.7.1 || >1.7.1,<1.7.2 || >1.7.2,<1.7.3 || >1.7.3,<1.8 || >1.8,<1.8.1 || >1.8.1,<2.0.0"
python-multipart = {version = ">=0.0.5,<0.0.6", optional = true, markers = "extra == \"all\""}
pyyaml = {version = ">=5.3.1,<7.0.0", optional = true, markers = "extra == \"all\""}
requests = {version = ">=2.24.0,<3.0.0", optional = true, markers = "extra == \"all\""}
starlette = "0.17.1"
ujson = {version = ">=4.0.1,<4.0.2 || >4.0.2,<4.1.0 || >4.1.0,<4.2.0 || >4.2.0,<4.3.0 || >4.3.0,<5.0.0 || >5.0.0,<5.1.0 || >5.1.0,<6.0.0", optional = true, markers = "extra == \"all\""}
uvicorn = {version = ">=0.12.0,<0.18.0", extras = ["standard"], optional = true, markers = "extra == \"all\""}

[package.extras]
test = ["types-dataclasses (==0.6.5)", "types-orjson (==3.6.2)", "types-ujson (==4.2.1)", "anyio[trio] (>=3.2.1,<4.0.0)", "flask (>=1.1.2,<3.0.0)", "python-multipart (>=0.0.5,<0.0.6)", "ujson (>=4.0.1,!=4.0.2,!=4.1.0,!=4.2.0,!=4.3.0,!=5.0.0,!=5.1.0,<6.0.0)", "orjson (>=3.2.1,<4.0.0)", "databases[sqlite] (>=0.3.2,<0.6.0)", "peewee (>=3.13.3,<4.0.0)", "sqlalchemy (>=1.3.18,<1.5.0)", "email_validator (>=1.1.1,<2.0.0)", "httpx (>=0.14.0,<0.19.0)", "requests (>=2.24.0,<3.0.0)", "isort (>=5.0.6,<6.0.0)", "black (==22.3.0)", "flake8 (>=3.8.3,<4.0.0)", "mypy (==0.910)", "pytest-cov (>=2.12.0,<4.0.0)", "pytest (>=6.2.4,<7.0.0)"]
doc = ["pyyaml (>=5.3.1,<7.0.0)", "typer (>=0.4.1,<0.5.0)", "mkdocs-markdownextradata-plugin (>=0.1.7,<0.3.0)", "mdx-include (>=1.4.1,<2.0.0)", "mkdocs-material (>=8.1.4,<9.0.0)", "mkdocs (>=1.1.2,<2.0.0)"]
dev = ["uvicorn[standard] (>=0.12.0,<0.18.0)", "flake8 (>=3.8.3,<4.0.0)", "autoflake (>=1.4.0,<2.0.0)", "passlib[bcrypt] (>=1.7.2,<2.0.0)", "python-jose[cryptography] (>=3.3.0,<4.0.0)"]
all = ["uvicorn[standard] (>=0.12.0,<0.18.0)", "email_validator (>=1.1.1,<2.0.0)", "orjson (>=3.2.1,<4.0.0)", "ujson (>=4.0.1,!=4.0.2,!=4.1.0,!=4.2.0,!=4.3.0,!=5.0.0,!=5.1.0,<6.0.0)", "pyyaml (>=5.3.1,<7.0.0)", "itsdangerous (>=1.1.0,<3.0.0)", "python-multipart (>=0.0.5,<0.0.6)", "jinja2 (>=2.11.2,<4.0.0)", "requests (>=2.24.0,<3.0.0)"]

[[package]]
name = "filelock"
version = "3.7.1"
description = "A platform independent file lock."
category = "dev"
optional = false
python-versions = ">=3.7"

[package.extras]
testing = ["pytest-timeout (>=1.4.2)", "pytest-cov", "pytest (>=4)", "coverage (>=4)", "covdefaults (>=1.2.0)"]
docs = ["sphinx-autodoc-typehints (>=1.12)", "sphinx (>=4.1)", "furo (>=2021.8.17b43)"]

[[package]]
name = "flake8"
version = "4.0.1"
description = "the modular source code checker: pep8 pyflakes and co"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
mccabe = ">=0.6.0,<0.7.0"
pycodestyle = ">=2.8.0,<2.9.0"
pyflakes = ">=2.4.0,<2.5.0"

[[package]]
name = "frozenlist"
version = "1.3.0"
description = "A list-like structure which implements collections.abc.MutableSequence"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "gensim"
version = "4.2.0"
description = "Python framework for fast Vector Space Modelling"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
numpy = ">=1.17.0"
scipy = ">=0.18.1"
smart-open = ">=1.8.1"

[package.extras]
test-win = ["nmslib", "pyemd", "testfixtures", "cython", "mock", "pytest-cov", "pytest"]
test = ["visdom (>0.1.8.7)", "nmslib", "pyemd", "testfixtures", "cython", "mock", "pytest-cov", "pytest"]
docs = ["pandas", "statsmodels", "nltk", "pyro4", "annoy", "memory-profiler", "matplotlib", "sphinxcontrib-napoleon", "sphinxcontrib.programoutput", "sphinx-gallery", "sphinx", "visdom (>0.1.8.7)", "Pyro4 (>=4.27)", "nmslib", "pyemd", "testfixtures", "cython", "mock", "pytest-cov", "pytest"]
distributed = ["Pyro4 (>=4.27)"]

[[package]]
name = "greenlet"
version = "1.1.2"
description = "Lightweight in-process concurrent programming"
category = "main"
optional = false
python-versions = ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*"

[package.extras]
docs = ["sphinx"]

[[package]]
name = "h11"
version = "0.13.0"
description = "A pure-Python, bring-your-own-I/O implementation of HTTP/1.1"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "httptools"
version = "0.4.0"
description = "A collection of framework independent HTTP protocol utils."
category = "main"
optional = false
python-versions = ">=3.5.0"

[package.extras]
test = ["Cython (>=0.29.24,<0.30.0)"]

[[package]]
name = "identify"
version = "2.5.2"
description = "File identification library for Python"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.extras]
license = ["ukkonen"]

[[package]]
name = "idna"
version = "2.10"
description = "Internationalized Domain Names in Applications (IDNA)"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[[package]]
name = "iniconfig"
version = "1.1.1"
description = "iniconfig: brain-dead simple config-ini parsing"
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "isort"
version = "5.10.1"
description = "A Python utility / library to sort Python imports."
category = "dev"
optional = false
python-versions = ">=3.6.1,<4.0"

[package.extras]
plugins = ["setuptools"]
colors = ["colorama (>=0.4.3,<0.5.0)"]
requirements_deprecated_finder = ["pip-api", "pipreqs"]
pipfile_deprecated_finder = ["requirementslib", "pipreqs"]

[[package]]
name = "itsdangerous"
version = "2.1.2"
description = "Safely pass data to untrusted environments and back."
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "jinja2"
version = "3.1.2"
description = "A very fast and expressive template engine."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
MarkupSafe = ">=2.0"

[package.extras]
i18n = ["Babel (>=2.7)"]

[[package]]
name = "jmespath"
version = "1.0.1"
description = "JSON Matching Expressions"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "joblib"
version = "1.1.0"
description = "Lightweight pipelining with Python functions"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "jsonpatch"
version = "1.32"
description = "Apply JSON-Patches (RFC 6902)"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[package.dependencies]
jsonpointer = ">=1.9"

[[package]]
name = "jsonpointer"
version = "2.3"
description = "Identify specific nodes in a JSON document (RFC 6901)"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[[package]]
name = "langcodes"
version = "3.3.0"
description = "Tools for labeling human languages with IETF language tags"
category = "main"
optional = false
python-versions = ">=3.6"

[package.extras]
data = ["language-data (>=1.1,<2.0)"]

[[package]]
name = "lxml"
version = "4.9.1"
description = "Powerful and Pythonic XML processing library combining libxml2/libxslt with the ElementTree API."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, != 3.4.*"

[package.extras]
source = ["Cython (>=0.29.7)"]
htmlsoup = ["beautifulsoup4"]
html5 = ["html5lib"]
cssselect = ["cssselect (>=0.7)"]

[[package]]
name = "markupsafe"
version = "2.1.1"
description = "Safely add untrusted strings to HTML/XML markup."
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "mccabe"
version = "0.6.1"
description = "McCabe checker, plugin for flake8"
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "mongomock"
version = "4.0.0"
description = "Fake pymongo stub for testing simple MongoDB-dependent code"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
packaging = "*"
sentinels = "*"
six = "*"

[[package]]
name = "mongomock-motor"
version = "0.0.10"
description = "Library for mocking AsyncIOMotorClient built on top of mongomock."
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
mongomock = ">=3.23.0,<5.0.0"

[[package]]
name = "motor"
version = "2.5.1"
description = "Non-blocking MongoDB driver for Tornado or asyncio"
category = "main"
optional = false
python-versions = ">=3.5.2"

[package.dependencies]
pymongo = ">=3.12,<4"

[package.extras]
encryption = ["pymongo[encryption] (>=3.12,<4)"]

[[package]]
name = "multidict"
version = "6.0.2"
description = "multidict implementation"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "murmurhash"
version = "1.0.7"
description = "Cython bindings for MurmurHash"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "mypy-boto3-cloudformation"
version = "1.24.0"
description = "Type annotations for boto3.CloudFormation 1.24.0 service generated with mypy-boto3-builder 7.6.1"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
typing-extensions = ">=4.1.0"

[[package]]
name = "mypy-boto3-dynamodb"
version = "1.24.12"
description = "Type annotations for boto3.DynamoDB 1.24.12 service generated with mypy-boto3-builder 7.7.1"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
typing-extensions = ">=4.1.0"

[[package]]
name = "mypy-boto3-ec2"
version = "1.24.14"
description = "Type annotations for boto3.EC2 1.24.14 service generated with mypy-boto3-builder 7.7.1"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
typing-extensions = ">=4.1.0"

[[package]]
name = "mypy-boto3-lambda"
version = "1.24.0"
description = "Type annotations for boto3.Lambda 1.24.0 service generated with mypy-boto3-builder 7.6.1"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
typing-extensions = ">=4.1.0"

[[package]]
name = "mypy-boto3-rds"
version = "1.24.0"
description = "Type annotations for boto3.RDS 1.24.0 service generated with mypy-boto3-builder 7.6.1"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
typing-extensions = ">=4.1.0"

[[package]]
name = "mypy-boto3-s3"
version = "1.24.0"
description = "Type annotations for boto3.S3 1.24.0 service generated with mypy-boto3-builder 7.6.1"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
typing-extensions = ">=4.1.0"

[[package]]
name = "mypy-boto3-sqs"
version = "1.24.0"
description = "Type annotations for boto3.SQS 1.24.0 service generated with mypy-boto3-builder 7.6.1"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
typing-extensions = ">=4.1.0"

[[package]]
name = "mypy-extensions"
version = "0.4.3"
description = "Experimental type system extensions for programs checked with the mypy typechecker."
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "nmslib"
version = "2.1.1"
description = "Non-Metric Space Library (NMSLIB)"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
numpy = {version = ">=1.10.0", markers = "python_version >= \"3.5\""}
psutil = "*"
pybind11 = "<2.6.2"

[[package]]
name = "nodeenv"
version = "1.7.0"
description = "Node.js virtual environment builder"
category = "dev"
optional = false
python-versions = ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,!=3.6.*"

[[package]]
name = "numpy"
version = "1.22.4"
description = "NumPy is the fundamental package for array computing with Python."
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "openpyxl"
version = "3.0.10"
description = "A Python library to read/write Excel 2010 xlsx/xlsm files"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
et-xmlfile = "*"

[[package]]
name = "orjson"
version = "3.7.5"
description = "Fast, correct Python JSON library supporting dataclasses, datetimes, and numpy"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "packaging"
version = "21.3"
description = "Core utilities for Python packages"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
pyparsing = ">=2.0.2,<3.0.5 || >3.0.5"

[[package]]
name = "pandas"
version = "1.4.3"
description = "Powerful data structures for data analysis, time series, and statistics"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
numpy = {version = ">=1.21.0", markers = "python_version >= \"3.10\""}
python-dateutil = ">=2.8.1"
pytz = ">=2020.1"

[package.extras]
test = ["pytest-xdist (>=1.31)", "pytest (>=6.0)", "hypothesis (>=5.5.3)"]

[[package]]
name = "passlib"
version = "1.7.4"
description = "comprehensive password hashing framework supporting over 30 schemes"
category = "main"
optional = false
python-versions = "*"

[package.extras]
totp = ["cryptography"]
build_docs = ["cloud-sptheme (>=1.10.1)", "sphinxcontrib-fulltoc (>=1.2.0)", "sphinx (>=1.6)"]
bcrypt = ["bcrypt (>=3.1.0)"]
argon2 = ["argon2-cffi (>=18.2.0)"]

[[package]]
name = "pathspec"
version = "0.9.0"
description = "Utility library for gitignore style pattern matching of file paths."
category = "dev"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,>=2.7"

[[package]]
name = "pathy"
version = "0.6.1"
description = "pathlib.Path subclasses for local and cloud bucket storage"
category = "main"
optional = false
python-versions = ">= 3.6"

[package.dependencies]
smart-open = ">=5.0.0,<6.0.0"
typer = ">=0.3.0,<1.0.0"

[package.extras]
test = ["typer-cli", "mock", "pytest-coverage", "pytest"]
s3 = ["boto3"]
gcs = ["google-cloud-storage (>=1.26.0,<2.0.0)"]
all = ["typer-cli", "mock", "pytest-coverage", "pytest", "boto3", "google-cloud-storage (>=1.26.0,<2.0.0)"]

[[package]]
name = "pdfminer.six"
version = "20220319"
description = "PDF parser and analyzer"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
chardet = {version = "*", markers = "python_version > \"3.0\""}
cryptography = "*"

[package.extras]
image = ["pillow"]
docs = ["sphinx-argparse", "sphinx"]
dev = ["pytest", "nox", "mypy (==0.931)", "black"]

[[package]]
name = "pdfplumber"
version = "0.6.2"
description = "Plumb a PDF for detailed information about each char, rectangle, and line."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
"pdfminer.six" = "20220319"
Pillow = ">=9.1"
Wand = ">=0.6.7"

[[package]]
name = "pillow"
version = "9.1.1"
description = "Python Imaging Library (Fork)"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
tests = ["pytest-timeout", "pytest-cov", "pytest", "pyroma", "packaging", "olefile", "markdown2", "defusedxml", "coverage", "check-manifest"]
docs = ["sphinxext-opengraph", "sphinx-rtd-theme (>=1.0)", "sphinx-removed-in", "sphinx-issues (>=3.0.1)", "sphinx-copybutton", "sphinx (>=2.4)", "olefile"]

[[package]]
name = "platformdirs"
version = "2.5.2"
description = "A small Python module for determining appropriate platform-specific dirs, e.g. a \"user data dir\"."
category = "dev"
optional = false
python-versions = ">=3.7"

[package.extras]
test = ["pytest (>=6)", "pytest-mock (>=3.6)", "pytest-cov (>=2.7)", "appdirs (==1.4.4)"]
docs = ["sphinx (>=4)", "sphinx-autodoc-typehints (>=1.12)", "proselint (>=0.10.2)", "furo (>=2021.7.5b38)"]

[[package]]
name = "playwright"
version = "1.22.0"
description = "A high-level API to automate web browsers"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
greenlet = "1.1.2"
pyee = "8.1.0"
websockets = "10.1"

[[package]]
name = "playwright-stealth"
version = "1.0.5"
description = "playwright stealth"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "pluggy"
version = "1.0.0"
description = "plugin and hook calling mechanisms for python"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.extras]
testing = ["pytest-benchmark", "pytest"]
dev = ["tox", "pre-commit"]

[[package]]
name = "pre-commit"
version = "2.20.0"
description = "A framework for managing and maintaining multi-language pre-commit hooks."
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
cfgv = ">=2.0.0"
identify = ">=1.0.0"
nodeenv = ">=0.11.1"
pyyaml = ">=5.1"
toml = "*"
virtualenv = ">=20.0.8"

[[package]]
name = "preshed"
version = "3.0.6"
description = "Cython hash table that trusts the keys are pre-hashed"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
cymem = ">=2.0.2,<2.1.0"
murmurhash = ">=0.28.0,<1.1.0"

[[package]]
name = "psutil"
version = "5.9.1"
description = "Cross-platform lib for process and system monitoring in Python."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[package.extras]
test = ["wmi", "pywin32", "enum34", "mock", "ipaddress"]

[[package]]
name = "py"
version = "1.11.0"
description = "library with cross-python path, ini-parsing, io, code, log facilities"
category = "dev"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[[package]]
name = "pybind11"
version = "2.6.1"
description = "Seamless operability between C++11 and Python"
category = "main"
optional = false
python-versions = "!=3.0,!=3.1,!=3.2,!=3.3,!=3.4,>=2.7"

[package.extras]
global = ["pybind11-global (==2.6.1)"]

[[package]]
name = "pycares"
version = "4.2.1"
description = "Python interface for c-ares"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
cffi = ">=1.5.0"

[package.extras]
idna = ["idna (>=2.1)"]

[[package]]
name = "pycld3"
version = "0.22"
description = "CLD3 Python bindings"
category = "main"
optional = false
python-versions = ">2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*"

[[package]]
name = "pycodestyle"
version = "2.8.0"
description = "Python style guide checker"
category = "dev"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[[package]]
name = "pycparser"
version = "2.21"
description = "C parser in Python"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[[package]]
name = "pydantic"
version = "1.9.1"
description = "Data validation and settings management using python type hints"
category = "main"
optional = false
python-versions = ">=3.6.1"

[package.dependencies]
typing-extensions = ">=3.7.4.3"

[package.extras]
email = ["email-validator (>=1.0.3)"]
dotenv = ["python-dotenv (>=0.10.4)"]

[[package]]
name = "pyee"
version = "8.1.0"
description = "A port of node.js's EventEmitter to python."
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "pyflakes"
version = "2.4.0"
description = "passive checker of Python programs"
category = "dev"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[[package]]
name = "pyjwt"
version = "2.4.0"
description = "JSON Web Token implementation in Python"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
cryptography = {version = ">=3.3.1", optional = true, markers = "extra == \"crypto\""}

[package.extras]
tests = ["coverage[toml] (==5.0.4)", "pytest (>=6.0.0,<7.0.0)"]
docs = ["zope.interface", "sphinx-rtd-theme", "sphinx"]
dev = ["pre-commit", "mypy", "coverage[toml] (==5.0.4)", "pytest (>=6.0.0,<7.0.0)", "cryptography (>=3.3.1)", "zope.interface", "sphinx-rtd-theme", "sphinx"]
crypto = ["cryptography (>=3.3.1)"]

[[package]]
name = "pymongo"
version = "3.12.3"
description = "Python driver for MongoDB <http://www.mongodb.org>"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
pymongo-auth-aws = {version = "<2.0.0", optional = true, markers = "extra == \"aws\""}

[package.extras]
zstd = ["zstandard"]
tls = ["ipaddress"]
srv = ["dnspython (>=1.16.0,<1.17.0)"]
snappy = ["python-snappy"]
ocsp = ["certifi", "service-identity (>=18.1.0)", "requests (<3.0.0)", "pyopenssl (>=17.2.0)"]
gssapi = ["pykerberos"]
encryption = ["pymongocrypt (>=1.1.0,<2.0.0)"]
aws = ["pymongo-auth-aws (<2.0.0)"]

[[package]]
name = "pymongo-auth-aws"
version = "1.0.2"
description = "MONGODB-AWS authentication support for PyMongo"
category = "main"
optional = false
python-versions = ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*"

[package.dependencies]
botocore = "*"
requests = "<3.0.0"

[[package]]
name = "pyparsing"
version = "3.0.9"
description = "pyparsing module - Classes and methods to define and execute parsing grammars"
category = "main"
optional = false
python-versions = ">=3.6.8"

[package.extras]
diagrams = ["jinja2", "railroad-diagrams"]

[[package]]
name = "pysbd"
version = "0.3.4"
description = "pysbd (Python Sentence Boundary Disambiguation) is a rule-based sentence boundary detection that works out-of-the-box across many languages."
category = "main"
optional = false
python-versions = ">=3"

[[package]]
name = "pytest"
version = "7.1.2"
description = "pytest: simple powerful testing with Python"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
atomicwrites = {version = ">=1.0", markers = "sys_platform == \"win32\""}
attrs = ">=19.2.0"
colorama = {version = "*", markers = "sys_platform == \"win32\""}
iniconfig = "*"
packaging = "*"
pluggy = ">=0.12,<2.0"
py = ">=1.8.2"
tomli = ">=1.0.0"

[package.extras]
testing = ["xmlschema", "requests", "pygments (>=2.7.2)", "nose", "mock", "hypothesis (>=3.56)", "argcomplete"]

[[package]]
name = "pytest-asyncio"
version = "0.18.3"
description = "Pytest support for asyncio"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
pytest = ">=6.1.0"

[package.extras]
testing = ["pytest-trio (>=0.7.0)", "mypy (==0.931)", "flaky (>=3.5.0)", "hypothesis (>=5.7.1)", "coverage (==6.2)"]

[[package]]
name = "python-dateutil"
version = "2.8.2"
description = "Extensions to the standard Python datetime module"
category = "main"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,>=2.7"

[package.dependencies]
six = ">=1.5"

[[package]]
name = "python-decouple"
version = "3.6"
description = "Strict separation of settings from code."
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "python-docx"
version = "0.8.11"
description = "Create and update Microsoft Word .docx files."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
lxml = ">=2.3.2"

[[package]]
name = "python-dotenv"
version = "0.20.0"
description = "Read key-value pairs from a .env file and set them as environment variables"
category = "main"
optional = false
python-versions = ">=3.5"

[package.extras]
cli = ["click (>=5.0)"]

[[package]]
name = "python-magic"
version = "0.4.27"
description = "File type identification using libmagic"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[[package]]
name = "python-multipart"
version = "0.0.5"
description = "A streaming multipart parser for Python"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
six = ">=1.4.0"

[[package]]
name = "pytz"
version = "2022.1"
description = "World timezone definitions, modern and historical"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "pyyaml"
version = "6.0"
description = "YAML parser and emitter for Python"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "redis"
version = "4.3.4"
description = "Python client for Redis database and key-value store"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
async-timeout = ">=4.0.2"
deprecated = ">=1.2.3"
packaging = ">=20.4"

[package.extras]
ocsp = ["requests (>=2.26.0)", "pyopenssl (==20.0.1)", "cryptography (>=36.0.1)"]
hiredis = ["hiredis (>=1.0.0)"]

[[package]]
name = "requests"
version = "2.25.1"
description = "Python HTTP for Humans."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[package.dependencies]
certifi = ">=2017.4.17"
chardet = ">=3.0.2,<5"
idna = ">=2.5,<3"
urllib3 = ">=1.21.1,<1.27"

[package.extras]
socks = ["win-inet-pton", "PySocks (>=1.5.6,!=1.5.7)"]
security = ["cryptography (>=1.3.4)", "pyOpenSSL (>=0.14)"]

[[package]]
name = "s3transfer"
version = "0.6.0"
description = "An Amazon S3 Transfer Manager"
category = "main"
optional = false
python-versions = ">= 3.7"

[package.dependencies]
botocore = ">=1.12.36,<2.0a.0"

[package.extras]
crt = ["botocore[crt] (>=1.20.29,<2.0a.0)"]

[[package]]
name = "scikit-learn"
version = "1.1.1"
description = "A set of python modules for machine learning and data mining"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
joblib = ">=1.0.0"
numpy = ">=1.17.3"
scipy = ">=1.3.2"
threadpoolctl = ">=2.0.0"

[package.extras]
tests = ["numpydoc (>=1.2.0)", "pyamg (>=4.0.0)", "mypy (>=0.770)", "black (>=22.3.0)", "flake8 (>=3.8.2)", "pytest-cov (>=2.9.0)", "pytest (>=5.0.1)", "pandas (>=1.0.5)", "scikit-image (>=0.14.5)", "matplotlib (>=3.1.2)"]
examples = ["seaborn (>=0.9.0)", "pandas (>=1.0.5)", "scikit-image (>=0.14.5)", "matplotlib (>=3.1.2)"]
docs = ["sphinxext-opengraph (>=0.4.2)", "sphinx-prompt (>=1.3.0)", "Pillow (>=7.1.2)", "numpydoc (>=1.2.0)", "sphinx-gallery (>=0.7.0)", "sphinx (>=4.0.1)", "memory-profiler (>=0.57.0)", "seaborn (>=0.9.0)", "pandas (>=1.0.5)", "scikit-image (>=0.14.5)", "matplotlib (>=3.1.2)"]
benchmark = ["memory-profiler (>=0.57.0)", "pandas (>=1.0.5)", "matplotlib (>=3.1.2)"]

[[package]]
name = "scipy"
version = "1.8.1"
description = "SciPy: Scientific Library for Python"
category = "main"
optional = false
python-versions = ">=3.8,<3.11"

[package.dependencies]
numpy = ">=1.17.3,<1.25.0"

[[package]]
name = "scispacy"
version = "0.5.0"
description = "A full SpaCy pipeline and models for scientific/biomedical documents."
category = "main"
optional = false
python-versions = ">=3.6.0"
develop = false

[package.dependencies]
conllu = "*"
joblib = "*"
nmslib = ">=1.7.3.6"
numpy = "*"
pysbd = "*"
requests = ">=2.0.0,<3.0.0"
scikit-learn = ">=0.20.3"
spacy = ">=3.2.0,<3.5.0"

[package.source]
type = "git"
url = "https://github.com/mbrown-bhe/scispacy.git"
reference = "main"
resolved_reference = "ab6397ae01e4d56b65443cd6f3000ed1d5e4e8ce"

[[package]]
name = "sentinels"
version = "1.0.0"
description = "Various objects to denote special meanings in python"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "six"
version = "1.16.0"
description = "Python 2 and 3 compatibility utilities"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*"

[[package]]
name = "smart-open"
version = "5.2.1"
description = "Utils for streaming large files (S3, HDFS, GCS, Azure Blob Storage, gzip, bz2...)"
category = "main"
optional = false
python-versions = ">=3.6,<4.0"

[package.extras]
all = ["boto3", "google-cloud-storage", "azure-storage-blob", "azure-common", "azure-core", "requests"]
azure = ["azure-storage-blob", "azure-common", "azure-core"]
gcs = ["google-cloud-storage"]
http = ["requests"]
s3 = ["boto3"]
test = ["boto3", "google-cloud-storage", "azure-storage-blob", "azure-common", "azure-core", "requests", "moto[server] (==1.3.14)", "pathlib2", "responses", "paramiko", "parameterizedtestcase", "pytest", "pytest-rerunfailures"]
webhdfs = ["requests"]

[[package]]
name = "sniffio"
version = "1.2.0"
description = "Sniff out which async library your code is running under"
category = "main"
optional = false
python-versions = ">=3.5"

[[package]]
name = "soupsieve"
version = "2.3.2.post1"
description = "A modern CSS selector implementation for Beautiful Soup."
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "spacy"
version = "3.4.0"
description = "Industrial-strength Natural Language Processing (NLP) in Python"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
catalogue = ">=2.0.6,<2.1.0"
cymem = ">=2.0.2,<2.1.0"
jinja2 = "*"
langcodes = ">=3.2.0,<4.0.0"
murmurhash = ">=0.28.0,<1.1.0"
numpy = ">=1.15.0"
packaging = ">=20.0"
pathy = ">=0.3.5"
preshed = ">=3.0.2,<3.1.0"
pydantic = ">=1.7.4,<1.8 || >1.8,<1.8.1 || >1.8.1,<1.10.0"
requests = ">=2.13.0,<3.0.0"
spacy-legacy = ">=3.0.9,<3.1.0"
spacy-loggers = ">=1.0.0,<2.0.0"
srsly = ">=2.4.3,<3.0.0"
thinc = ">=8.1.0,<8.2.0"
tqdm = ">=4.38.0,<5.0.0"
typer = ">=0.3.0,<0.5.0"
wasabi = ">=0.9.1,<1.1.0"

[package.extras]
transformers = ["spacy-transformers (>=1.1.2,<1.2.0)"]
th = ["pythainlp (>=2.0)"]
ray = ["spacy-ray (>=0.1.0,<1.0.0)"]
lookups = ["spacy-lookups-data (>=1.0.3,<1.1.0)"]
ko = ["natto-py (==0.9.0)"]
ja = ["sudachidict-core (>=20211220)", "sudachipy (>=0.5.2,!=0.6.1)"]
cuda92 = ["cupy-cuda92 (>=5.0.0b4,<11.0.0)"]
cuda91 = ["cupy-cuda91 (>=5.0.0b4,<11.0.0)"]
cuda90 = ["cupy-cuda90 (>=5.0.0b4,<11.0.0)"]
cuda80 = ["cupy-cuda80 (>=5.0.0b4,<11.0.0)"]
cuda117 = ["cupy-cuda117 (>=5.0.0b4,<11.0.0)"]
cuda116 = ["cupy-cuda116 (>=5.0.0b4,<11.0.0)"]
cuda115 = ["cupy-cuda115 (>=5.0.0b4,<11.0.0)"]
cuda114 = ["cupy-cuda114 (>=5.0.0b4,<11.0.0)"]
cuda113 = ["cupy-cuda113 (>=5.0.0b4,<11.0.0)"]
cuda112 = ["cupy-cuda112 (>=5.0.0b4,<11.0.0)"]
cuda111 = ["cupy-cuda111 (>=5.0.0b4,<11.0.0)"]
cuda110 = ["cupy-cuda110 (>=5.0.0b4,<11.0.0)"]
cuda102 = ["cupy-cuda102 (>=5.0.0b4,<11.0.0)"]
cuda101 = ["cupy-cuda101 (>=5.0.0b4,<11.0.0)"]
cuda100 = ["cupy-cuda100 (>=5.0.0b4,<11.0.0)"]
cuda = ["cupy (>=5.0.0b4,<11.0.0)"]
apple = ["thinc-apple-ops (>=0.1.0.dev0,<1.0.0)"]

[[package]]
name = "spacy-legacy"
version = "3.0.9"
description = "Legacy registered functions for spaCy backwards compatibility"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "spacy-loggers"
version = "1.0.2"
description = "Logging utilities for SpaCy"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
wasabi = ">=0.8.1,<1.1.0"

[[package]]
name = "srsly"
version = "2.4.3"
description = "Modern high-performance serialization utilities for Python"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
catalogue = ">=2.0.3,<2.1.0"

[[package]]
name = "starlette"
version = "0.17.1"
description = "The little ASGI library that shines."
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
anyio = ">=3.0.0,<4"

[package.extras]
full = ["requests", "pyyaml", "python-multipart", "jinja2", "itsdangerous"]

[[package]]
name = "tenacity"
version = "8.0.1"
description = "Retry code until it succeeds"
category = "main"
optional = false
python-versions = ">=3.6"

[package.extras]
doc = ["tornado (>=4.5)", "sphinx", "reno"]

[[package]]
name = "thinc"
version = "8.1.0"
description = "A refreshing functional take on deep learning, compatible with your favorite libraries"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
blis = ">=0.7.8,<0.8.0"
catalogue = ">=2.0.4,<2.1.0"
cymem = ">=2.0.2,<2.1.0"
murmurhash = ">=1.0.2,<1.1.0"
numpy = ">=1.15.0"
preshed = ">=3.0.2,<3.1.0"
pydantic = ">=1.7.4,<1.8 || >1.8,<1.8.1 || >1.8.1,<1.10.0"
srsly = ">=2.4.0,<3.0.0"
wasabi = ">=0.8.1,<1.1.0"

[package.extras]
torch = ["torch (>=1.6.0)"]
tensorflow = ["tensorflow (>=2.0.0,<2.6.0)"]
mxnet = ["mxnet (>=1.5.1,<1.6.0)"]
datasets = ["ml-datasets (>=0.2.0,<0.3.0)"]
cuda92 = ["cupy-cuda92 (>=5.0.0b4)"]
cuda91 = ["cupy-cuda91 (>=5.0.0b4)"]
cuda90 = ["cupy-cuda90 (>=5.0.0b4)"]
cuda80 = ["cupy-cuda80 (>=5.0.0b4)"]
cuda115 = ["cupy-cuda115 (>=5.0.0b4)"]
cuda114 = ["cupy-cuda114 (>=5.0.0b4)"]
cuda113 = ["cupy-cuda113 (>=5.0.0b4)"]
cuda112 = ["cupy-cuda112 (>=5.0.0b4)"]
cuda111 = ["cupy-cuda111 (>=5.0.0b4)"]
cuda110 = ["cupy-cuda110 (>=5.0.0b4)"]
cuda102 = ["cupy-cuda102 (>=5.0.0b4)"]
cuda101 = ["cupy-cuda101 (>=5.0.0b4)"]
cuda100 = ["cupy-cuda100 (>=5.0.0b4)"]
cuda = ["cupy (>=5.0.0b4)"]

[[package]]
name = "threadpoolctl"
version = "3.1.0"
description = "threadpoolctl"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "toml"
version = "0.10.2"
description = "Python Library for Tom's Obvious, Minimal Language"
category = "main"
optional = false
python-versions = ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*"

[[package]]
name = "tomli"
version = "2.0.1"
description = "A lil' TOML parser"
category = "dev"
optional = false
python-versions = ">=3.7"

[[package]]
name = "tqdm"
version = "4.64.0"
description = "Fast, Extensible Progress Meter"
category = "main"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,>=2.7"

[package.dependencies]
colorama = {version = "*", markers = "platform_system == \"Windows\""}

[package.extras]
telegram = ["requests"]
slack = ["slack-sdk"]
notebook = ["ipywidgets (>=6)"]
dev = ["wheel", "twine", "py-make (>=0.1.0)"]

[[package]]
name = "typer"
version = "0.4.1"
description = "Typer, build great CLIs. Easy to code. Based on Python type hints."
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
click = ">=7.1.1,<9.0.0"

[package.extras]
test = ["isort (>=5.0.6,<6.0.0)", "black (>=22.3.0,<23.0.0)", "mypy (==0.910)", "pytest-sugar (>=0.9.4,<0.10.0)", "pytest-xdist (>=1.32.0,<2.0.0)", "coverage (>=5.2,<6.0)", "pytest-cov (>=2.10.0,<3.0.0)", "pytest (>=4.4.0,<5.4.0)", "shellingham (>=1.3.0,<2.0.0)"]
doc = ["mdx-include (>=1.4.1,<2.0.0)", "mkdocs-material (>=8.1.4,<9.0.0)", "mkdocs (>=1.1.2,<2.0.0)"]
dev = ["flake8 (>=3.8.3,<4.0.0)", "autoflake (>=1.3.1,<2.0.0)"]
all = ["shellingham (>=1.3.0,<2.0.0)", "colorama (>=0.4.3,<0.5.0)"]

[[package]]
name = "types-s3transfer"
version = "0.6.0"
description = "Type annotations and code completion for s3transfer"
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "typing-extensions"
version = "4.2.0"
description = "Backported and Experimental Type Hints for Python 3.7+"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "ujson"
version = "5.3.0"
description = "Ultra fast JSON encoder and decoder for Python"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "urllib3"
version = "1.26.9"
description = "HTTP library with thread-safe connection pooling, file post, and more."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4"

[package.extras]
socks = ["PySocks (>=1.5.6,!=1.5.7,<2.0)"]
secure = ["ipaddress", "certifi", "idna (>=2.0.0)", "cryptography (>=1.3.4)", "pyOpenSSL (>=0.14)"]
brotli = ["brotlipy (>=0.6.0)", "brotli (>=1.0.9)", "brotlicffi (>=0.8.0)"]

[[package]]
name = "uvicorn"
version = "0.17.6"
description = "The lightning-fast ASGI server."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
asgiref = ">=3.4.0"
click = ">=7.0"
colorama = {version = ">=0.4", optional = true, markers = "sys_platform == \"win32\" and extra == \"standard\""}
h11 = ">=0.8"
httptools = {version = ">=0.4.0", optional = true, markers = "extra == \"standard\""}
python-dotenv = {version = ">=0.13", optional = true, markers = "extra == \"standard\""}
PyYAML = {version = ">=5.1", optional = true, markers = "extra == \"standard\""}
uvloop = {version = ">=0.14.0,<0.15.0 || >0.15.0,<0.15.1 || >0.15.1", optional = true, markers = "sys_platform != \"win32\" and sys_platform != \"cygwin\" and platform_python_implementation != \"PyPy\" and extra == \"standard\""}
watchgod = {version = ">=0.6", optional = true, markers = "extra == \"standard\""}
websockets = {version = ">=10.0", optional = true, markers = "extra == \"standard\""}

[package.extras]
standard = ["colorama (>=0.4)", "uvloop (>=0.14.0,!=0.15.0,!=0.15.1)", "PyYAML (>=5.1)", "python-dotenv (>=0.13)", "watchgod (>=0.6)", "httptools (>=0.4.0)", "websockets (>=10.0)"]

[[package]]
name = "uvloop"
version = "0.16.0"
description = "Fast implementation of asyncio event loop on top of libuv"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
test = ["mypy (>=0.800)", "pyOpenSSL (>=19.0.0,<19.1.0)", "pycodestyle (>=2.7.0,<2.8.0)", "psutil", "flake8 (>=3.9.2,<3.10.0)", "aiohttp"]
docs = ["sphinx-rtd-theme (>=0.5.2,<0.6.0)", "sphinxcontrib-asyncio (>=0.3.0,<0.4.0)", "Sphinx (>=4.1.2,<4.2.0)"]
dev = ["mypy (>=0.800)", "pyOpenSSL (>=19.0.0,<19.1.0)", "pycodestyle (>=2.7.0,<2.8.0)", "psutil", "flake8 (>=3.9.2,<3.10.0)", "aiohttp", "sphinx-rtd-theme (>=0.5.2,<0.6.0)", "sphinxcontrib-asyncio (>=0.3.0,<0.4.0)", "Sphinx (>=4.1.2,<4.2.0)", "pytest (>=3.6.0)", "Cython (>=0.29.24,<0.30.0)"]

[[package]]
name = "virtualenv"
version = "20.15.1"
description = "Virtual Python Environment builder"
category = "dev"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,>=2.7"

[package.dependencies]
distlib = ">=0.3.1,<1"
filelock = ">=3.2,<4"
platformdirs = ">=2,<3"
six = ">=1.9.0,<2"

[package.extras]
testing = ["packaging (>=20.0)", "pytest-timeout (>=1)", "pytest-randomly (>=1)", "pytest-mock (>=2)", "pytest-freezegun (>=0.4.1)", "pytest-env (>=0.6.2)", "pytest (>=4)", "flaky (>=3)", "coverage-enable-subprocess (>=1)", "coverage (>=4)"]
docs = ["towncrier (>=21.3)", "sphinx-rtd-theme (>=0.4.3)", "sphinx-argparse (>=0.2.5)", "sphinx (>=3)", "proselint (>=0.10.2)"]

[[package]]
name = "wand"
version = "0.6.7"
description = "Ctypes-based simple MagickWand API binding for Python"
category = "main"
optional = false
python-versions = "*"

[package.extras]
test = ["pytest (>=5.3.5)"]
doc = ["Sphinx (>=2.4.1)"]

[[package]]
name = "wasabi"
version = "0.9.1"
description = "A lightweight console printing and formatting toolkit"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "watchgod"
version = "0.8.2"
description = "Simple, modern file watching and code reload in python."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
anyio = ">=3.0.0,<4"

[[package]]
name = "websockets"
version = "10.1"
description = "An implementation of the WebSocket Protocol (RFC 6455 & 7692)"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "wrapt"
version = "1.14.1"
description = "Module for decorators, wrappers and monkey patching."
category = "main"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,>=2.7"

[[package]]
name = "xgboost"
version = "1.6.1"
description = "XGBoost Python Package"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
numpy = "*"
scipy = "*"

[package.extras]
scikit-learn = ["scikit-learn"]
plotting = ["matplotlib", "graphviz"]
pandas = ["pandas"]
datatable = ["datatable"]
dask = ["distributed", "pandas", "dask"]

[[package]]
name = "xxhash"
version = "3.0.0"
description = "Python binding for xxHash"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "yarl"
version = "1.7.2"
description = "Yet another URL library"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
idna = ">=2.0"
multidict = ">=4.0"

[metadata]
lock-version = "1.1"
python-versions = "3.10.3"
content-hash = "e7ceb1aacc298032020bad4b3a0b3fa98a36a99d21e15d4ef147c93f0820df15"

[metadata.files]
aiodns = []
aiofiles = []
aiohttp = []
aiosignal = []
anyio = []
asgiref = []
async-lru = []
async-timeout = []
atomicwrites = []
attrs = []
bcrypt = []
beanie = []
beautifulsoup4 = []
black = []
blis = []
boto3 = []
boto3-stubs = []
botocore = []
botocore-stubs = []
brotli = []
catalogue = []
cchardet = []
certifi = []
cffi = []
cfgv = []
chardet = []
charset-normalizer = []
click = []
colorama = []
conllu = []
cryptography = []
cymem = []
deprecated = []
distlib = []
dnspython = []
docx2txt = []
email-validator = []
et-xmlfile = []
fastapi = []
filelock = []
flake8 = []
frozenlist = []
gensim = []
greenlet = []
h11 = []
httptools = []
identify = []
idna = []
iniconfig = []
isort = []
itsdangerous = []
jinja2 = []
jmespath = []
joblib = []
jsonpatch = []
jsonpointer = []
langcodes = []
lxml = []
markupsafe = []
mccabe = []
mongomock = []
mongomock-motor = []
motor = []
multidict = []
murmurhash = []
mypy-boto3-cloudformation = []
mypy-boto3-dynamodb = []
mypy-boto3-ec2 = []
mypy-boto3-lambda = []
mypy-boto3-rds = []
mypy-boto3-s3 = []
mypy-boto3-sqs = []
mypy-extensions = []
nmslib = []
nodeenv = []
numpy = []
openpyxl = []
orjson = []
packaging = []
pandas = []
passlib = []
pathspec = []
pathy = []
"pdfminer.six" = []
pdfplumber = []
pillow = []
platformdirs = []
playwright = []
playwright-stealth = []
pluggy = []
pre-commit = []
preshed = []
psutil = []
py = []
pybind11 = []
pycares = []
pycld3 = []
pycodestyle = []
pycparser = []
pydantic = []
pyee = []
pyflakes = []
pyjwt = []
pymongo = []
pymongo-auth-aws = []
pyparsing = []
pysbd = []
pytest = []
pytest-asyncio = []
python-dateutil = []
python-decouple = []
python-docx = []
python-dotenv = []
python-magic = []
python-multipart = []
pytz = []
pyyaml = []
redis = []
requests = []
s3transfer = []
scikit-learn = []
scipy = []
scispacy = []
sentinels = []
six = []
smart-open = []
sniffio = []
soupsieve = []
spacy = []
spacy-legacy = []
spacy-loggers = []
srsly = []
starlette = []
tenacity = []
thinc = []
threadpoolctl = []
toml = []
tomli = []
tqdm = []
typer = []
types-s3transfer = []
typing-extensions = []
ujson = []
urllib3 = []
uvicorn = []
uvloop = []
virtualenv = []
wand = []
wasabi = []
watchgod = []
websockets = []
wrapt = []
xgboost = []
xxhash = []
yarl = []
