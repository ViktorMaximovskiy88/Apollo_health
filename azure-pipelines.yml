name: $(Date:yyyyMMdd)$(Rev:.r)

trigger:
  branches:
    include:
      - main
  tags:
    include:
      - 'v*'

pool:
  vmImage: ubuntu-latest

variables:
  DOCKER_BUILDKIT: 1

stages:
  - stage: build 
    displayName: Build Stage
    jobs:
      - job: buildSourceHub
        displayName: Build SourceHub
        steps:
          ## Pull Latest SourceHub Base Image from ECR if it exists. This will help improve build times of the Base and App images
          - task: ECRPullImage@1
            displayName: Pull SourceHub Base Image
            inputs:
              awsCredentials: "Apollo-AWS-Dev-Apollo"
              regionName: 'us-east-1'
              repository: 'sourcehub-base'
              imageSource: 'imagetag'
              imageTag: 'latest'
            continueOnError: true
          - task: Docker@2
            displayName: Build Source Hub Base Image
            inputs:
              command: build
              repository: sourcehub-base
              Dockerfile: Docker/base.Dockerfile
              arguments: '--cache-from 307744843177.dkr.ecr.us-east-1.amazonaws.com/sourcehub-base:latest --build-arg BUILDKIT_INLINE_CACHE=1'
              tags: |
                latest
          - task: ECRPushImage@1
            displayName: Push SourceHub Base Image to ECR
            inputs:
              awsCredentials: "Apollo-AWS-Dev-Apollo"
              regionName: 'us-east-1'
              imageSource: 'imagename'
              sourceImageName: 'sourcehub-base'
              sourceImageTag: 'latest'
              repositoryName: 'sourcehub-base'
              pushTag: 'latest'
          ## Pull Latest SourceHub Base Image from ECR if it exists. This will help improve build time of the App image
          - task: ECRPullImage@1
            displayName: Pull SourceHub App Image
            inputs:
              awsCredentials: "Apollo-AWS-Dev-Apollo"
              regionName: 'us-east-1'
              repository: 'sourcehub-app'
              imageSource: 'imagetag'
              imageTag: 'latest'
            continueOnError: true
          - task: Docker@2
            displayName: Build SourceHub App Image
            inputs:
              command: build
              repository: sourcehub-app
              Dockerfile: Docker/app.Dockerfile
              buildContext: $(Build.SourcesDirectory)
              arguments: '--cache-from 307744843177.dkr.ecr.us-east-1.amazonaws.com/sourcehub-app:latest --build-arg BUILDKIT_INLINE_CACHE=1'
              tags: |
                $(Build.BuildNumber)
                $(Build.SourceVersion)
                latest
          - task: ECRPushImage@1
            displayName: Push SourceHub App Image to ECR as SourceVersion
            inputs:
              awsCredentials: "Apollo-AWS-Dev-Apollo"
              regionName: 'us-east-1'
              imageSource: 'imagename'
              sourceImageName: 'sourcehub-app'
              sourceImageTag: '$(Build.SourceVersion)'
              repositoryName: 'sourcehub-app'
              pushTag: '$(Build.SourceVersion)'
          - task: ECRPushImage@1
            displayName: Push SourceHub App Image to ECR as latest
            inputs:
              awsCredentials: "Apollo-AWS-Dev-Apollo"
              regionName: 'us-east-1'
              imageSource: 'imagename'
              sourceImageName: 'sourcehub-app'
              sourceImageTag: '$(Build.SourceVersion)'
              repositoryName: 'sourcehub-app'
              pushTag: latest
      - job: validateDevDeploy
        displayName: Validate and Plan Dev Deployment 
        steps:
          - template: .azure-pipelines/source-hub.validate.yml
            parameters:
              environment: dev
              awsCredentials: "Apollo-AWS-Dev-Apollo"
      - job: validateTstDeploy
        displayName: Validate and Plan Test Deployment 
        steps:
          - template: .azure-pipelines/source-hub.validate.yml
            parameters:
              environment: tst
              awsCredentials: "Apollo-AWS-Test-Apollo"
  - stage: development
    displayName: Development Stage
    dependsOn: build
    condition: and(succeeded(), or(eq(variables['Build.SourceBranch'], 'refs/heads/main'), startsWith(variables['Build.SourceBranch'], 'refs/heads/feature/')))
    jobs:
      - deployment: dev_deployment
        displayName: Deploy to SourceHub Dev
        environment: SourceHub-Dev
        strategy:
            runOnce:
              deploy:
                steps:
                  - template: .azure-pipelines/source-hub.deploy.yml
                    parameters:
                      environment: dev
                      awsCredentials: "Apollo-AWS-Dev-Apollo"
  - stage: test
    displayName: Test Stage
    dependsOn: development
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
    jobs:
      - deployment: tst_deployment
        displayName: Deploy to SourceHub Test
        environment: SourceHub-Test
        strategy:
            runOnce:
              deploy:
                steps:
                  - task: ECRPullImage@1
                    displayName: Pull SourceHub App Image
                    inputs:
                      awsCredentials: "Apollo-AWS-Dev-Apollo"
                      regionName: 'us-east-1'
                      repository: 'sourcehub-app'
                      imageSource: 'imagetag'
                      imageTag: '$(Build.SourceVersion)'
                      outputVariable: 'DevImageId'
                  - task: ECRPushImage@1
                    displayName: Push SourceHub App Image to ECR as SourceVersion
                    inputs:
                      awsCredentials: "Apollo-AWS-Test-Apollo"
                      regionName: 'us-east-1'
                      imageSource: 'imageid'
                      sourceImageId: $(DevImageId)
                      repositoryName: 'sourcehub-app'
                      pushTag: '$(Build.SourceVersion)'
                  - template: .azure-pipelines/source-hub.deploy.yml
                    parameters:
                      environment: tst
                      awsCredentials: "Apollo-AWS-Test-Apollo"
  - stage: production
    displayName: Production Stage
    dependsOn: test
    condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/v'))
    jobs:
      - deployment: prd_deployment
        displayName: Deploy to SourceHub Prod
        environment: SourceHub-Prod
        strategy:
            runOnce:
              deploy:
                steps:
                  - task: ECRPullImage@1
                    displayName: Pull SourceHub App Image
                    inputs:
                      awsCredentials: "Apollo-AWS-Dev-Apollo"
                      regionName: 'us-east-1'
                      repository: 'sourcehub-app'
                      imageSource: 'imagetag'
                      imageTag: '$(Build.SourceVersion)'
                      outputVariable: 'DevImageId'
                  - task: ECRPushImage@1
                    displayName: Push SourceHub App Image to ECR as SourceVersion
                    inputs:
                      awsCredentials: "Apollo-AWS-Prod-Apollo"
                      regionName: 'us-east-1'
                      imageSource: 'imageid'
                      sourceImageId: $(DevImageId)
                      repositoryName: 'sourcehub-app'
                      pushTag: '$(Build.SourceVersion)'
                  - template: .azure-pipelines/source-hub.deploy.yml
                    parameters:
                      environment: prd
                      awsCredentials: "Apollo-AWS-Prod-Apollo"
